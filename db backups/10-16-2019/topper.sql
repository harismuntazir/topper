-- phpMyAdmin SQL Dump
-- version 4.9.0.1
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: Oct 16, 2019 at 09:09 AM
-- Server version: 10.3.16-MariaDB
-- PHP Version: 7.3.7

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `topper`
--

-- --------------------------------------------------------

--
-- Table structure for table `y2019`
--

CREATE TABLE `y2019` (
  `UID` int(11) NOT NULL,
  `NAME` varchar(500) NOT NULL,
  `RELATED` varchar(500) NOT NULL,
  `DESCRIPTION` longtext NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `y2019`
--

INSERT INTO `y2019` (`UID`, `NAME`, `RELATED`, `DESCRIPTION`) VALUES
(813, 'charset=&quot;text&quot;', 'html', 'Specifies the character encoding of the linked document (obsolete)'),
(814, '&lt;!-- text --&gt;', 'html', 'Inserts a comment into the document (comments are not displayed in the\r\nrendered page)'),
(815, '&lt;a&gt; &lt;/a&gt;', 'html', 'Marks the beginning and end of a link'),
(816, '&lt;!doctype&gt;', 'html', 'Specifies the Document Type Definition for a document'),
(817, 'coords=&quot;value list&quot;', 'html', 'Specifies the coordinates of a hotspot in a client-side image map; the value list\r\ndepends on the shape of the hotspot: shape=&quot;rect&quot; &quot;left, right, top, bottom&quot;\r\nshape=&quot;circle&quot; &quot;x_center, y_center, radius&quot; shape=&quot;poly&quot; &quot;x1, y1, x2, y2, x3,\r\ny3, â€¦&quot; (obsolete)'),
(818, 'href=â€urlâ€', 'html', 'Specifies the URL of the link '),
(819, 'hreflang=â€textâ€', 'html', 'Specifies the language of the linked document'),
(820, 'name=â€textâ€', 'html', 'Specifies a name for the enclosed text, allowing it to be a link target (obsolete)'),
(821, 'rel=â€textâ€', 'html', 'Specifies the relationship between the current page and the link specified by the href attribute.\r\n\r\nrev=&quot;text&quot; Specifies reverse relationship between the two mensioned above.'),
(822, 'shape=â€rect|circle|polygonâ€', 'html', 'Specifies the shape of the hotspot (obsolete)'),
(823, 'title=&quot;text&quot; target=&quot;text&quot;', 'html', 'Specifies the pop-up text for the link\r\nSpecifies the target windows or frame for the link'),
(824, 'type=â€mime-typeâ€', 'html', 'Specifies the data type of the linked document'),
(825, '&lt;abbr&gt; &lt;/abbr&gt;', 'html', 'Marks abbreviated text'),
(826, '&lt;acronym&gt; &lt;/acronym&gt;', 'html', 'Marks acronym text (deprecated)'),
(827, '&lt;address&gt; &lt;/address&gt;', 'html', 'Marks address text'),
(829, '&lt;area /&gt;', 'html', 'Marks an image map hotspot\r\nalt=â€textâ€      Specifies alternate text for the hotspot\r\n\r\ncoords=â€valueÆ’listâ€     Specifies the coordinates of the hotspot; \r\n\r\nthe value list depends on the shape of the hotspot:  \r\n\r\nshape=&quot;rect&quot; &quot;left, right, top, bottom&quot; \r\n\r\nshape=&quot;circle&quot; &quot;x_center, y_center, radius&quot; \r\n\r\nshape=&quot;poly&quot;&quot;x1, y1, x2, y2, x3, y3, â€¦&quot;\r\n\r\nhref=â€urlâ€ Specifies the URL of the document to which the hotspot points\r\n\r\nhreflang=â€langâ€     Language of the hyperlink destination\r\n\r\nmedia=â€mediaâ€      The media for which the destination of the hyperlink was designed\r\n\r\nrel=â€textâ€      Specifies the relationship between the current page and the destination of the link\r\n\r\nnohref=â€nohrefâ€      Specifies that the hotspot does not point to a link\r\n\r\nshape=â€rect|circle|polygonâ€     Specifies the shape of the hotspot\r\n\r\ntarget=â€textâ€     Specifies the target window or frame for the link'),
(839, '&lt;applet&gt; &lt;/applet&gt;', 'html', 'Embeds an applet into the browser (deprecated)   \r\nalign=â€alignâ€ Specifies the alignment of the applet with the surrounding text where align is absmiddle, absbottom, baseline, bottom, center, left, middle, right, texttop, or top   \r\nalt=â€textâ€ Specifies alternate text for the applet (deprecated)   \r\narchive=â€urlâ€ Specifies the URL of an archive containing classes and other resources to be used with the applet (deprecated)   \r\ncode=â€urlâ€ Specifies the URL of the appletâ€™s code/class (deprecated)   \r\ncodebase=â€urlâ€ Specifies the URL of all class files for the applet (deprecated)   \r\ndatafld=â€textâ€ Specifies the data source that supplies bound data for use with the data source   \r\ndatasrc=â€textâ€ Specifies the ID or URL of the appletâ€™s data source   \r\nheight=â€integerâ€ Specifies the height of the applet in pixels   \r\nhspace=â€integerâ€ Specifies the horizontal space around the applet in pixels (deprecated)   \r\nmayscript=â€mayscriptâ€ Permits access to the applet by programs embedded in the document   \r\nname=â€textâ€ Specifies the name assigned to the applet (deprecated)   \r\nobject=â€textâ€ Specifies the name of the resource that contains a serialized representation of the applet (deprecated)   \r\nsrc=â€urlâ€ Specifies an external URL reference to the applet   \r\nvspace=â€integerâ€ Specifies the vertical space around the applet in pixels (deprecated)   \r\nwidth=â€integerâ€ Specifies the width of the applet in pixels (deprecated)'),
(842, 'htmlspeicalchars()', 'php', 'Use the function htmlspecialchars() to encode characters that have special meanings in HTML.\r\nYou can use the htmlspecialchars() function, which converts characters to their HTML entity equivalents. For example, &lt; is converted to &amp;lt;. This function converts any script tags to harmless characters.\r\n'),
(843, 'unset($var)', 'php', 'You can wipe a variable out of existence by using its companion function, unset(), which has the following prototype:\r\n                   void unset(mixed var);[;mixed var[,...]])\r\nThis function gets rid of the variable it is passed.'),
(844, 'getting form data', 'php', '$_POST [â€˜nameâ€™];\r\n$_GET [â€˜nameâ€™];\r\n$_REQUEST [â€˜nameâ€™];\r\nïƒ¼	3 WAYS TO GET FORM DATA\r\nïƒ¼	name A VARIABLE FROM HTML FORM\r\nïƒ¼	3RD CAN BE USED IN BOTH CASES GET AND POST METHODS\r\nïƒ¼	USE POST WHEN POST METHOD IS USED IN FORM \r\nïƒ¼	USE GET WHEN GET METHOD IS USED\r\n'),
(845, 'string concatination operator', 'php', 'ECHO $name . â€œ Is Your Nameâ€;\r\nïƒ¼	. IS A STRING CONCATINATION OPERATOR\r\nïƒ¼	ECHO PRINTS THE WHAT IS NEXT TO IT\r\nïƒ¼	â€œ â€ DOUBLE QUOTES INDICATE STRINGS\r\nïƒ¼	$name IS PHP VARIABLE\r\n'),
(846, 'single and doubles quotes', 'php', 'â€˜ â€™ AND â€œ â€\r\nïƒ¼	â€˜ â€˜ SINGLE QUOTES DO NOT ALTER VARIABLES OR DATA IN THEM\r\nïƒ¼	â€œ â€œ DOUBLE QUOTES ALTER VARIABLES IN THEM\r\n'),
(847, 'multi-line echo statement', 'php', 'MULTI LINE ECHO STATEMENT (HEREDOC STRING)\r\nECHO &lt;&lt;&lt;label\r\nLINE 1 \r\nLINE 2\r\nâ€¦\r\nLabel;\r\nïƒ¼	&lt;&lt;&lt;label MARKS THE LABEL FOR THE END OF ECHO STATEMENT\r\nïƒ¼	label AT THE END TELLS ECHO HAS ENDED\r\nïƒ¼	HERDOC STRING ARE INTERPOLATED LIKE DOUBLE QUOTE STINGS,\r\nïƒ¼	MEANS VARIABLES IN THEM ARE SOLVED TO SIMPLE TEXT\r\nïƒ¼	INDENTATION IS NECESSARY \r\n'),
(848, 'constants', 'php', 'DEFINE (â€˜CONSTANT_IDENTIFIERâ€™, constant_value);	\r\n\r\nPREFER UPPER CASE FOR CONSTANT'),
(849, 'variable variables', 'php', '$varname = â€˜some_valueâ€™;  	then\r\n$$varname = 5;   IS EQUAL  $$some_value = 5;\r\n'),
(850, 'type casting', 'php', '$some_var = 2;\r\n$some_var = (float) $other_var;		//$other_var WILL BE 2.0 (FLOAT TYPE)\r\n'),
(851, 'ternary operator (?:)', 'php', 'CONDITION ? VALUE OF TRUE : VALUE IF FALSE\r\nïƒ¼	($grade &gt;= 50 ? â€˜Passedâ€™ : â€˜Failedâ€™);\r\n'),
(852, 'error suppression operator @', 'php', 'ERROR SUPPRESSION OPERATOR ( @ )\r\nïƒ¼	$var = @ (57/0);\r\nïƒ¼	SUPPRESS THE ERROR OF DIVIDE BY ZERO HERE\r\nïƒ¼	NO ERROR WARNINGS WILL BE SHOWEN\r\n'),
(853, 'the execuation operator (` `)', 'php', 'THE EXECUATION OPERATOR (` `) (SYMBOL PLACED AT TILDE)\r\nïƒ¼	$out = `dir C:`;\r\nïƒ¼	echo â€˜&lt;pre&gt;â€™ . $out. â€˜&lt;/pre&gt;â€™;\r\n'),
(854, 'while loop', 'php', 'WHILE (CONDITION) EXPRESSION;	//SAME AS IN C C++\r\n\r\nwhile (condition) {\r\nstatemets;\r\n}\r\n'),
(855, 'for each loop', 'php', 'used for arrays\r\nforeach ($var as $current) {\r\necho $current . &quot;&lt;br /&gt;&quot;;\r\n}'),
(856, 'do while loops', 'php', 'do {\r\nstatement 1;\r\n...\r\n...\r\n}while (condition);\r\n\r\nsame as in c c++'),
(857, 'for loop', 'php', 'FOR ($i = 1; $i &lt;= 5; $i++){\r\nEXPRESSION 1;\r\n..\r\n}	//SAME AS IN C C++'),
(858, 'breaking out of a control structure or script', 'php', 'ïƒ¼	break;	//BREAK OUT LOOP, EXECUTE CODE NEXT TO IT\r\nïƒ¼	continue; 	//BREAK REST LOOP AND CONTINUE NEXT ITERATION\r\nïƒ¼	 exit; 	//EXIT THE PHP SCRIPT INSTANTANEOUSLY\r\n'),
(859, 'opening files ', 'php', 'fopen ()		//OPEN FILES IF PRESENT OR CREATE NEW ONE\r\nïƒ¼	$DOCUMENT_ROOT = $_SERVER[\'DOCUMENT_ROOTâ€™]; 		//= C:\\XAMPP\\htdocs\r\nïƒ¼	$fp = fopen (â€œ$DOCUMENT_ROOT/foldername/FILE.txtâ€);\r\nïƒ¼	OR USE $fp = fopen(â€œFILE.txtâ€ , â€opentype e.g. abâ€, TRUE);\r\nfwrite ()		//WRTIE OPENED FILE\r\nïƒ¼	fwrite ($fp, $inputstring, strlen ($inputstring));\r\nïƒ¼	$inputstring = STRING TO BE SAVED\r\nïƒ¼	Strlen (var) = LENGTH CHECK OF var  \r\nfclose ()		//CLOSE OPENED FILE\r\nïƒ¼	Fclose ($fp);\r\nïƒ¼	CLOSE FILE OPENED IN $fp\r\n'),
(860, 'file locks', 'php', 'ïƒ¼	flock ($file_open_pointer, LOCK_TYPE);		//USES POINTER TO OPENED FILE\r\nïƒ¼	LOCK_TYPES ARE\r\nïƒ¼	LOCK_SH		//READING LOCK, CAN BE SHARED WITH OTHER READERS\r\nïƒ¼	LOCK_EX		//WRITING LOCK, CANNOT BE SHARED (EXCLUSIVE)\r\nïƒ¼	LOCK_UN		//RELEASE EXISTING LOCK\r\nïƒ¼	LOCK_NB		//PREVENT BLOCKING WHILE TRYING TO GET LOCK\r\n'),
(861, 'read data from files (line by line)', 'php', 'ïƒ¼	OPEN FILE FOR READ ONLY USING fopen () WITH rb (READ BINARY)\r\nïƒ¼	USE DIFFERENT OPEN FUNCTIONS TO GET DATA\r\nïƒ¼	fgets ($fp, n) AS BELOW	//$fp = FILE POINTER, n = BYTE LIMIT (n-1 BYTES ONLY)\r\nwhile (!feof($fp)) {		//FEOF = FILE END OF FILE\r\n$record = fgets ($fp, 999);\r\nEcho $record . â€œ&lt;br/&gt;â€;\r\n}\r\nïƒ¼	READS FILE UNTIL 998 BYTES REACHED OR EOF (END OF FILE)\r\nïƒ¼	FOEF CHECKS END OF FILE AND RETURNS TRUE\r\nïƒ¼	fgets(), fgetss(), AND fgetcsv()\r\nïƒ¼	fgetss() VARIATION ON fgets() STRIPS OUT ANY PHP AND HTML TAGS FOUND IN STRING\r\nïƒ¼	CAN ALLOW TAGS USING allowable_tags STRING PARAMETER\r\nïƒ¼	fgetcsv() VARIATION ON fgets() USES DELIMITING CHARACTER (\\n, \\t, etc)\r\n$record = fgetcsv ($fp, 100, â€œ\\tâ€);\r\n'),
(862, 'reading the whole file', 'php', 'ïƒ¼	readfile(), fpassthru(), and file()\r\nïƒ¼	readfile(â€œ$location/file.txtâ€);	//OUTS ALL FILE DATA TO BROWSER\r\nïƒ¼	fpassthru($fp);	//SAME AS readfile() BUT NEEDS FILE OPENED BY fopen()\r\nïƒ¼	FILE IS AUTO CLOSED AFTER OPERATION\r\nïƒ¼	file();		//SAME AS readfile() BUT DOES NOT ECHO, INSTEAD TURNS INTO ARRAY\r\n$filearray = file(â€œ$location/file.txtâ€);\r\nïƒ¼	file_get_contents(); 	//IDENTICAL TO readfile(), NO ECHO, INSTEAD CREATES STRING\r\n'),
(863, 'reading a character', 'php', 'ïƒ¼	fgetc() \r\nwhile(!feof($fp)){\r\n$char = fgetc($fp);\r\nif(!feof($fp))\r\n    echo ($char == â€œ\\nâ€ ? â€œ&lt;br/&gt;â€ : $char);\r\n }\r\n'),
(864, 'reading an arbitrary length', 'php', 'ïƒ¼	fread() 		// READS LENGTH BYTES OF DATA FROM FILE\r\nïƒ¼	string fread(resource fp, int length);\r\n'),
(866, 'navigating inside a file', 'php', 'ïƒ¼	rewind(), fseek(), and ftell()\r\nïƒ¼	rewind($fp); 		//RESETS FILE POINTER TO BEGINNING OF FILE\r\nïƒ¼	ftell($fp);		//REPORTS HOW FAR POINTER IS GONE IN FILE\r\nïƒ¼	fseek();			//SETS POINTER TO SOME LOCATION IN FILE\r\nint fseek (resource fp, int offset [, int whence])\r\nïƒ¼	WHENCE DEFAULTS TO SEEK_SET, WHICH IS START OF FILE\r\nïƒ¼	SEEK_CUR FOR CURRENT LOCATION OF POINTER IN FILE\r\nïƒ¼	SEEK_END FOR END OF FILE\r\n'),
(867, 'arrays', 'php', 'ï‚§	NUMERICALLY INDEXED ARRAYS AND USER DEFINED KEYS (INDICES)\r\nï‚§	NUMERICAL INDEXED ARRARYS ARE ARRAY WITH INDEX NUMERICAL\r\nï‚§	$products = array(â€˜Penâ€™,â€™Copyâ€™,â€™Pencilâ€™);		//array() IS STATEMENT NOT FUNCTION\r\nï‚§	range() FUNCTION AUTOMATICALLY CREATES AN ARRAY\r\n$numbers = range(1,10);	//CREATES ARRAY RANGE 1-10;\r\n$odds = range(1,10,2);		//ONLY ODDS BECAUSE THIRD PARM. IS 2\r\n$letters = range(â€˜aâ€™, â€˜zâ€™);		//ARRAY OF ALPHABETS\r\necho $products[1]; 	//OUTPUTS Copy TO BROWSER, AS INDEX STARTS IS 0\r\n'),
(868, 'using loops to access the array', 'php', 'â€¢	for ($i=0,$i&lt;3;$i++){\r\necho $products[$i] . â€œ â€;\r\n} 		//USE THIS LOOP TO GET ALL DATA OUT OF THE ARRAY\r\nâ€¢	LOOP DESIGNED SPECIALLY FOR ARRAYS\r\nforeach($products as $current) {	//$current STORES EACH ELEMENT AND PRINTS IT\r\necho $current . â€œ â€;\r\n}\r\n'),
(870, 'arrays with different indicies', 'php', 'â€¢	$prices = array(â€˜Penâ€™ =&gt; 100, â€˜Pencilâ€™ =&gt; 10, â€˜Copyâ€™ =&gt; 5);		//INTIALIZATION WAY 1\r\nâ€¢	$prices = array (â€˜Penâ€™ =&gt; 100);			\r\n$prices = [â€˜Pencilâ€™] = 10;			//INTIALIZATION WAY 2\r\n$prices = [â€˜Copyâ€™] = 5;\r\nâ€¢	$prices [â€˜Penâ€™] = 100;\r\n$prices [â€˜Pencilâ€™] = 10;			//INTIALIZATION WAY 3\r\n$prices [â€˜Copyâ€™] = 5;\r\nâ€¢	THESE  ARRAYS ARE ACCESSED BY foreach LOOP OR list() AND each() CONSTRUCTS\r\n\r\nâ€¢	foreach($prices as $key =&gt; $value) {\r\n\r\necho $key . â€œ â€“ â€œ . $value . â€œ&lt;br /&gt;â€;\r\n}\r\n'),
(871, 'each() ', 'php', 'â€¢	USING each() CONSTRUCT\r\nâ€¢	While ($element = each($prices)) {\r\necho $element[â€˜keyâ€™];\r\necho â€œ â€“ â€œ;\r\necho $element[â€˜valueâ€™];\r\necho â€œ&lt;br/&gt;â€\r\n}\r\n'),
(872, 'list()', 'php, arrays', 'â€¢	USING list() TO ACCESS ARRAY\r\nâ€¢	SPLITS THE TWO VALUES FROM each() FUNCTION\r\nâ€¢	while (list($product, $price) = each($prices)) {\r\necho â€œ$product - $price &lt;br/&gt;â€;\r\n}\r\n'),
(873, 'reset()', 'php, arrays', 'â€¢	USING reset() TO RESTORE ARRAY TO START\r\nâ€¢	reset ($prices);		//RESETS $prices AT CURRENT ELEMENT BACK TO START\r\n'),
(874, 'array sorts', 'php, arrays', 'USING sort() TO GET SORTED ARRAY IN ASCENDING ORDER\r\nâ€¢	$products = array (â€˜Penâ€™, â€˜Pencilâ€™, â€˜Copyâ€™);	//ALPHABETIC ARRAY\r\n$sort ($products);	//OUT PUT array (â€˜Copyâ€™, â€™Penâ€™, â€™Pencilâ€™)\r\nâ€¢	$prices = array (100, 10,  5);	//NUMERICAL ORDER ARRAY\r\n$sort ($prices);		//OUT PUT array (5, 10, 100)\r\nâ€¢	asort() SORT ORDER IS ON VALUES\r\nâ€¢	$prices = array( â€˜Penâ€™=&gt;10, â€˜Pencilâ€™=&gt;30, â€˜Copyâ€™=&gt;13 ); \r\nâ€¢	$asort($prices);		//SORT ON PRICES WHICH IS VALUES IN ASC\r\nâ€¢	ksort($prices);		//SORT ON DESCRIPTIONS I.E,  ALPHABETICAL\r\n\r\n3 SORT FUNCTIONS ABOVE SORT THE ARRAY IN ASCENDING ORDER\r\nREVERSE OF THEM IS rsort(), arsort(), krsort(). THEY SORT IN DESCENDING ORDER. \r\n'),
(875, '2d arrays', 'php, arrays', '2 DIMENSIONAL ARRAYS\r\nâ€¢	$matrix = array( array (â€˜PNâ€™,â€™Penâ€™,â€™10â€™),(â€˜CPYâ€™,â€™Copyâ€™,â€™30â€™),(â€˜PCLâ€™,â€™Pencilâ€™,â€™20â€™));\r\nâ€¢	$matrix = array  ( array  (â€˜PNâ€™ =&gt; â€˜Codeâ€™, â€™Penâ€™ =&gt; â€˜Nameâ€™, â€™10â€™ =&gt; â€˜Qtyâ€™),\r\n(â€˜CPYâ€™ =&gt; â€˜Codeâ€™, â€™Copyâ€™ =&gt; â€˜Nameâ€™, â€™30â€™ =&gt; â€˜Qtyâ€™),\r\n(â€˜PCLâ€™ =&gt; â€˜Codeâ€™, â€™Pencilâ€™ =&gt; â€˜Nameâ€™, â€™20â€™ =&gt; â€˜Qtyâ€™));\r\nâ€¢	FIRST ONE USES NUMERICAL INDICES AND PRINT USING NESTED FOR LOOP\r\nâ€¢	SECOND USES DESCRIPTICE KEYS AND IS PRINTED USING FOLLOWING METHODS\r\nâ€¢	for ($rows = 0; $rows &lt;3; $rows++) {\r\nwhile (list ($key, $value) = each ($matrix [$rows] )) {\r\necho â€œ| $valueâ€;\r\n}\r\necho â€œ&lt;br /&gt;â€;\r\n}\r\n'),
(876, 'user defined sorts', 'php, sort', 'USER DEFINED SORTS\r\nâ€¢	usort() USES A USER DEFINED COMPARE FUNCTION TO SORT ARRAYS\r\nâ€¢	U STANTS FOR USER\r\nâ€¢	function compare($x, $y) {\r\nif($x[1] == $y[1]){		//USE 2 INSTEAD OF ONE TO GET DIFFERENT SOFT\r\nreturn 0;\r\n} else if ($x[1] &lt; $y[1]) {\r\nreturn -1;\r\n} else {\r\nreturn 1;\r\n} }\r\nâ€¢	usort ($products, â€˜compareâ€™);\r\nâ€¢	OTHER SORTS ARE uasort() FROM asort() AND uksort() FROM ksort()\r\n'),
(877, 'reverse user sorts', 'php, sort', 'REVERSE USER SORTS\r\nâ€¢	REVERSE THE ORDER OF usort() â€˜S  COMPARE FUNCTION TO REVERSE ARRAY\r\n'),
(878, 'reordering arrays', 'php, arrays', 'REORDERING ARRAYS\r\nâ€¢	shuffle() 	//shuffle($array) USES 1 ARRAY TO SHUFFLES ELEMENTS\r\nâ€¢	array_reverse()  	//TAKES AN ARRAY AND REVERSE ITS ELEMENTS\r\n'),
(879, 'push and pop', 'php, arrays', 'PUSH AND POP ARRAY ELEMENTS\r\nâ€¢	array_push()	// ADD NEW ELEMENT TO AN ARRAY\r\nâ€¢	$number = array();\r\nfor($i=10; $i&gt;0;$i++) {\r\narray_push($numbers, $i);\r\n}\r\nâ€¢	array_pop(); 		//OPPOSITE OF array_push() USED TO REMOVE ARRAY ELEMENTS\r\n'),
(880, 'count()', 'php', 'â€¢	$number_of_items = count($array_of_items);'),
(881, 'explode()', 'php, string formatting', 'USING explode() FUNCTION\r\nâ€¢	USED TO SPLIT UP EACH LINE TO APPLY PROCESSING &amp; FORMATTING BEFORE PRINTING\r\nâ€¢	Explode(â€œ\\tâ€ , $items[$i] );\r\nâ€¢	EACH TAB CHARACTER BECOMES A BREAK BETWEEN 2 ELEMENTS\r\n'),
(882, 'intval()', 'php', 'USING int intval() FUNCTION\r\nâ€¢	CONVERTS STRING INTO AN INTEGER\r\nâ€¢	SAME ARE float floatval() and string strval()\r\n'),
(884, 'array_walk()', 'php, arrays', 'USING array_walk() FUNCTION\r\nâ€¢	Use array_walk() to work with or modify every element in an array in the same way. \r\nProto-type of array_walk() is below:\r\nâ€¢	Bool array_walk (array arr, string func, [mixed userdata])	//userdata IS OPTIONAL\r\nâ€¢	which requires a user defined function as below:\r\nâ€¢	function mu_print($value) {\r\necho â€œ$value &lt;br /&gt;â€;\r\n}\r\narray_walk($array, â€˜my_printâ€™);'),
(885, 'counting elements in an array', 'php, arrays', 'COUNTING ELEMENTS IN AN ARRAY\r\nâ€¢	count() 		//AS USED BEFORE\r\nâ€¢	sizeof() 		//CHECKS THE SIZE OF ARRAY\r\nâ€¢	array_count_values($array)	\r\nâ€¢	COUNTS HOW MANY TIMES EACH UNIQUE VALUE OCCURS IN ARRAY NAMED $array'),
(886, 'extract()', 'php, arrays', 'USING extract () FUNCTION \r\nâ€¢	CONVERTS ARRAYS TO SCALAR VARIABLES\r\nâ€¢	extract(array var_array [, int extract_type]  [, string prefix]);\r\nâ€¢	TAKES AN ARRAY, CREATES SCALAR VARIABLES WITH THE NAMES OF THE KEYS IN THE ARRAY. THE VALUES OF THESE VARIABLES ARE SET TO THE VALUES IN THE ARRAY\r\nâ€¢	$array = array (â€˜key1â€™ =&gt; â€˜vaue1â€™, â€˜key2â€™ =&gt; â€˜value2â€™);\r\nextract ($array);\r\necho â€œ$key1    $key2â€; \r\nâ€¢	Int extract_type HANDLES COLLISIONS		//DEFAULT TYPE IS TO OVERWRITE\r\nâ€¢	PHP AND MYSQL WEB DEVELOPMENT PAGE 144 CONTAINS ALL EXTRACT TYPES\r\n'),
(887, 'create smart form mail', 'php, form, mail', 'CREATE SMART FORM MAIL\r\nï¶	CREATE FORM WITH FIELDS AS NAME, EMAIL, FEEDBACK\r\nï¶	SET UP STATIC INFORMATIO AS BELOW\r\n$toaddress = â€œharis.0813.m@gmail.comâ€;\r\n$subject =  â€œFeedback From Web Siteâ€;\r\n$mailcontent = â€œName: â€ . $name . â€œ\\nâ€.\r\n		â€œE- Mail: â€ . $email  . â€œ\\nâ€.\r\n		â€œComments: â€ .$feedback . â€œ\\nâ€;\r\n$fromaddress = â€œFrom: webserver@example.comâ€;\r\nï¶	USE THE mail() FUNCTION TO SEND MAIL\r\nï¶	mail($toaddress, $subject, $mailcontent, $fromaddress);\r\nï¶	mail() IS A BOOL TYPE FUNCTION\r\n'),
(889, 'trimming strings', 'php, formatting strings', 'TRIMMING STRINGS \r\nï¶	trim(string); 	//REMOVES WHITESPACES FROM THE START AND END OF STRING\r\nï¶	RETURNS THE RESULT STRING AS OUTPUT\r\nï¶	CHARACTER STRIPPED BY DEFAULT ARE\r\nï¶	NEWLINES, CARRIAGE RETURNS (\\n, AND \\r), HORIZONTAL AND VERTICAL TABS (\\t AND x0B), END-OF-STRING CHARACTERS (\\0), AND SPACES\r\nï¶	SECOND PARAMETER CAN BE USED TO LIST OTHER CHARACTER TO BE REMOVED\r\nï¶	ltrim() AND rtrim() ARE SAME BUT REMOVES FROM LEFT AND RIGHT RESPECTIVELY \r\n'),
(890, 'formatting strings for presentation', 'php, formatting strings', 'FORMATTING STRINGS FOR PRESENTATION\r\nï¶	USING HTML FORMATTING : nl2br() FUNCTION\r\nï¶	TAKES A STRING AS PARAMETER AND REPLACES ALL NEWLINES WITH XHTML &lt;br /&gt; TAG\r\nï¶	echo nl2br($mailcontent);\r\nï¶	FORMATTING A STRING FOR PRINTING\r\nï¶	bool print(); 	//SAME AS echo LANGUAGE CONTRUCT printf() FUNCTION PRINTS DATA\r\nï¶	void printf() &amp; string sprintf() \r\nï¶	printf() PRINTS FORMATTED STRING, sprintf() RETURNS FORMATTED STRING\r\nï¶	printf(â€œWelcome %sâ€, $name);		//SAME USAGE AS C C++\r\n'),
(891, 'string cases', 'php, formatting strings', 'CHANGE STRING CASE\r\nï¶	strtoupper() 	// UPPERCASE\r\nï¶	strlower()	//LOWERCASE\r\nï¶	ucfirst()	//UPPERCASE FIRST CHARACTER\r\nï¶	ucwords()	//UPPERCASE FIRST CHARACTER OF EACH WORD\r\n'),
(892, '&lt;article&gt; &lt;/article&gt;', 'html', 'Structural element marking a page article (HTML5)'),
(893, '&lt;aside&gt; &lt;/aside&gt;', 'html', 'Structural element marking a sidebar that is tangentially related to the main page content (HTML5)'),
(894, '&lt;audio&gt; &lt;/audio&gt;', 'html', 'Marks embedded audio content (HTML5)\r\nautoplay=â€autoplayâ€ Automatically begins playback of the audio stream\r\n\r\npreload=â€none|metadata|autoâ€  Specifies whether to preload data to the browser\r\ncontrols=â€controlsâ€ Specifies whether to display audio controls\r\nloop=â€loopâ€ Specifies whether to automatically loop back to the beginning of the audio clip\r\nsrc=â€urlâ€ Provides the source of the audio clip'),
(895, '&lt;b&gt; &lt;/b&gt;', 'html', 'Marks text offset from its surrounding content without conveying any extra emphasis or importance'),
(896, '&lt;br /&gt;', 'html', ' &lt;br /&gt;\r\n clear=â€none|left|\r\nright|allâ€\r\nInserts a line break into the page\r\nDisplays the line break only when the specified margin is clear (obsolete)'),
(897, '&lt;button&gt; &lt;/button&gt;', 'html', 'Creates a form button\r\nautofocus=&quot;autofocus&quot; \r\nGives the button the focus when the page is loaded (HTML5)\r\ndisabled=&quot;disabled&quot; \r\nDisables the button\r\nform=&quot;text&quot; \r\nSpecifies the form to which the button belongs (HTML5)\r\nformaction=&quot;url&quot; \r\nSpecifies the URL to which the form data is sent (HTML5)\r\nformenctype=&quot;mime-type&quot; \r\nSpecifies the encoding of the form data before it is sent (HTML5)\r\nformmethod=&quot;get|post&quot; \r\nSpecifies the HTTP method with which the form data is submitted\r\nformnovalidate= &quot;formnovalidate&quot; \r\nSpecifies that the form should not be validated during submission (HTML5)\r\nformtarget=&quot;text&quot; \r\nProvides a name for the target of the button (HTML5)\r\nname=â€textâ€ \r\nProvides the name assigned to the form button\r\ntype=â€submit|reset|buttonâ€ \r\nSpecifies the type of form button\r\nvalue=â€textâ€ \r\nProvides the value associated with the form button'),
(898, '&lt;center&gt; &lt;/center&gt;', 'html', 'Centers content horizontally on the page (obsolete)'),
(899, '&lt;embed&gt; &lt;/embed&gt;', 'html', 'Defines external multimedia content or a plugin (HTML5)\r\nalign=â€alignâ€ \r\nSpecifies the alignment of the object with the surrounding content where align is bottom, left, right, or top (obsolete)\r\nheight=â€integerâ€ \r\nSpecifies the height of the object in pixels\r\nhspace=â€integerâ€ \r\nSpecifies the horizontal space around the object in pixels (obsolete)\r\nname=â€textâ€ \r\nProvides the name of the embedded object (obsolete)\r\nsrc=â€urlâ€ \r\nProvides the location of the file containing the object\r\ntype=â€mime-typeâ€ \r\nSpecifies the mime-type of the embedded object\r\nvspace=â€integerâ€ \r\nSpecifies the vertical space around the object in pixels (obsolete)\r\nwidth=â€integerâ€ \r\nSpecifies the width of the object in pixels'),
(900, '&lt;form&gt; &lt;/form&gt;', 'html', 'Encloses the contents of a web form\r\naccept=â€mime-typeÆ’listâ€ \r\nLists mime-types that the server processing the form will handle (deprecated)\r\naccept-charset=â€charÆ’codeâ€\r\nSpecifies the character encoding that the server processing the form will handle\r\naction=â€urlâ€ \r\nProvides the URL to which the form values are to be sent\r\nautocomplete=â€on|offâ€ \r\nEnables automatic insertion of information in fields in which the user has previously entered data (HTML5)\r\nenctype=â€mime-typeâ€ \r\nSpecifies the mime-type of the data to be sent to the server for processing; the default is &quot;application/x-www-form-urlencoded&quot;\r\nmethod=â€get|postâ€ \r\nSpecifies the method of accessing the URL specified in the action attribute\r\nname=â€textâ€ \r\nSpecifies the name of the form\r\nnovalidate=â€novalidateâ€ \r\nSpecifies that the form is not meant to be validated during submission (HTML5)\r\ntarget=â€textâ€\r\nSpecifies the frame or window in which output from the form should appear'),
(901, '&lt;frame&gt; &lt;/frame&gt;', 'html', 'Marks a single frame within a set of frames (deprecated)\r\nbordercolor=â€colorâ€ \r\nSpecifies the color of the frame border\r\nframeborder=â€1|0â€ \r\nDetermines whether the frame border is visible (1) or invisible (0); Netscape also supports values of yes or no\r\nlongdesc=â€urlâ€ \r\nProvides the URL of a document containing a long description of the frameâ€™s contents\r\nmarginheight=â€integerâ€\r\nSpecifies the space above and below the frame object and the frameâ€™s borders, in pixels\r\nmarginwidth=â€integerâ€ \r\nSpecifies the space to the left and right of the frame object and the frameâ€™s borders, in pixels\r\nname=â€textâ€ \r\nSpecifies the name of the frame\r\nnoresize=â€noresizeâ€ \r\nPrevents users from resizing the frame\r\nscrolling=â€auto|yes|noâ€\r\nSpecifies whether the browser will display a scroll bar with the frame\r\nsrc=â€urlâ€  \r\nProvides the URL of the document to be displayed in the frame'),
(902, '&lt;iframe&gt; &lt;/iframe&gt;', 'html', 'Creates an inline frame in the document\r\nalign=â€alignâ€ \r\nSpecifies the horizontal alignment of the frame with the surrounding content where align is bottom, left, middle, top, or right (obsolete)\r\ndatafld=â€textâ€ \r\nIndicates the column from a data source that supplies bound data for the inline frame (IE only)\r\ndataformatas=â€html|plaintext|textâ€\r\nSpecifies the format of the data in the data source bound with the inline frame (IE only)\r\ndatasrc=â€urlâ€ \r\nProvides the URL or ID of the data source bound with the inline frame (IE only)\r\nframeborder=â€1|0â€ \r\nSpecifies whether to display a frame border (1) or not (0) (obsolete)\r\nheight=â€integerâ€ \r\nSpecifies the height of the frame in pixels\r\nlongdesc=â€urlâ€ \r\nIndicates the document contains a long description of the frameâ€™s content\r\n(obsolete)\r\nmarginheight=â€integerâ€ \r\nSpecifies the space above and below the frame object and the frameâ€™s borders, in pixels (obsolete)\r\nmarginwidth=â€integerâ€ \r\nSpecifies the space to the left and right of the frame object and the frameâ€™s borders, in pixels (obsolete)\r\nname=â€textâ€ \r\nSpecifies the name of the frame\r\nsandbox=â€allow-forms|allow-scripts|allow-top-navigation|allow-same-originâ€\r\nDefines restrictions to the frame content (HTML5)\r\nseamless=â€seamlessâ€ \r\nDisplays the inline frame as part of the document (HTML5)\r\nscrolling=â€auto|yes|noâ€\r\nDetermines whether the browser displays a scroll bar with the frame (obsolete)\r\nsrc=â€urlâ€ \r\nIndicates the document displayed within the frame\r\nsrcdoc=â€textâ€ \r\nProvides the HTML code shown in the inline frame (HTML5)\r\nwidth=â€integerâ€ \r\nSpecifies the width of the frame in pixels'),
(903, '&lt;img&gt; &lt;/img&gt;', 'html', 'Inserts an inline image into the document\r\nalign=â€alignâ€ Specifies the alignment of the image with the surrounding content where align is left, right, top, text textop, middle, absmiddle, baseline, bottom, absbottomv(obsolete)\r\nalt=â€textâ€ Specifies alternate text to be displayed in place of the image\r\nborder=â€integerâ€ Specifies the width of the image border (obsolete)\r\ndatafld=â€textâ€ Names the column from a data source that supplies bound data for the image (IE only)\r\ndataformatas=â€html|plaintext|textâ€\r\nSpecifies the format of the data in the data source bound with the image (IE only)\r\ndatasrc=â€urlâ€ Provides the URL or ID of the data source bound with the image (IE only)\r\ndynsrc=â€urlâ€ Provides the URL of a video or VRML file (IE and Opera only)\r\nheight=â€integerâ€ Specifies the height of the image in pixels\r\nhspace=â€integerâ€ Specifies the horizontal space around the image in pixels (deprecated)\r\nismap=â€ismapâ€ Indicates that the image can be used as a server-side image map\r\nlongdesc=â€urlâ€ Provides the URL of a document containing a long description of the image (obsolete)\r\nname=â€textâ€ Specifies the image name (obsolete)\r\nsrc=â€urlâ€ Specifies the image source file\r\nusemap=â€urlâ€ Provides the location of a client-side image associated with the image (not well-supported when the URL points to an external file)\r\nvspace=â€integerâ€ Specifies the vertical space around the image in pixels (obsolete)\r\nwidth=â€integerâ€ Specifies the width of the image in pixels'),
(904, '&lt;input&gt; &lt;/input', 'html, form', 'Marks an input field in a web form\r\nalign=â€alignâ€ Specifies the alignment of the input field with the surrounding content where align is left, right, top, texttop, middle, absmiddle, baseline, bottom, or absbottom (obsolete)\r\nalt=â€textâ€ Specifies alternate text for image buttons and image input fields\r\nchecked=â€checkedâ€ Specifies that the input check box or input radio button is selected\r\ndatafld=â€textâ€ Indicates the column from a data source that supplies bound data for the input field (IE only)\r\ndataformatas=â€html|plaintext|textâ€\r\nSpecifies the format of the data in the data source bound with the input field (IE only)\r\ndatasrc=â€urlâ€ Provides the URL or ID of the data source bound with the input field (IE only)\r\ndisabled=&quot;disabled&quot; Disables the input control\r\nform=&quot;text&quot; Specifies the form to which the button belongs (HTML5)\r\nformaction=&quot;url&quot; Specifies the URL to which the form data is sent (HTML5)\r\nformenctype=&quot;mime-type&quot; Specifies the encoding of the form data before it is sent (HTML5)\r\nformmethod=&quot;get|post&quot; Specifies the HTTP method with which the form data is submitted \r\nformnovalidate=&quot;formnovalidate&quot;   Specifies that the form should not be validated during submission (HTML5)\r\nformtarget=&quot;text&quot; Provides a name for the target of the button (HTML5)\r\nheight=â€integerâ€ Specifies the height of the image input field in pixels (HTML5)\r\nlist=&quot;id&quot; Specifies the id of a data list associated with the input field (HTML5)\r\nmax=&quot;value&quot; Specifies the maximum value of the field (HTML5)\r\nmaxlength=â€integerâ€ Specifies the maximum number of characters that can be inserted into a text input field\r\nmin=&quot;value&quot; Specifies the minimum value of the field (HTML5)\r\nmultiple=&quot;multiple&quot; Specifies that the user is allowed to specify more than one input value (HTML5)\r\nname=â€textâ€ Specifies the name of the input field\r\npattern=&quot;text&quot; Specifies the required regular expression pattern of the input field value (HTML5)\r\nplaceholder=&quot;text&quot; Specifies placeholder text for the input field (HTML5)\r\nreadonly=â€readonlyâ€ Prevents the value of the input field from being modified\r\nsize=â€integerâ€ Specifies the number of characters that can be displayed at one time in an input text field\r\nsrc=â€urlâ€ Indicates the source file of an input image field\r\nstep=â€any|valueâ€ Specifies the value granularity of the field value (HTML5)\r\ntype=â€textâ€ Specifies the input type where text is button, checkbox, color, date, datetime, datetime-local, email, file, hidden, image, month, number, password, radio, range, reset, search, submit, tel, text, time, url, or week (HTML5)\r\nvalue=â€textâ€ Specifies the default value of the input field\r\nwidth=â€integerâ€ Specifies the width of an image input field in pixels (HTML5)'),
(905, '&lt;link /&gt;', 'html', 'Creates an element in the document head that establishes the relationship between the current document and external documents or objects\r\ncharset=â€charcodeâ€ Specifies the character encoding of the external document (obsolete)\r\nhref=â€urlâ€ Provides the URL of the external document\r\nhreflang=â€textâ€ Indicates the language of the external document\r\nmedia=â€mediaâ€ Indicates the media in which the external document is presented\r\nrel=â€textâ€ Specifies the relationship between the current page and the link specified by the href attribute\r\nrev=â€textâ€ Specifies the reverse relationship between the current page and the link specified by the href attribute (obsolete)\r\nsizes=â€any|valueâ€ Specifies the sizes of icons used for visual media (HTML5)\r\ntarget=â€textâ€ Specifies the target window or frame for the link (obsolete)\r\ntype=â€mime-typeâ€ Specifies the mime-type of the external document'),
(906, '&lt;output&gt; &lt;/output&gt;', 'html, form', 'Form control representing the result of a calculation (HTML5)\r\nname=&quot;text&quot; Specifies the name part of the name/value pair associated with the field\r\nform=&quot;id&quot; Specifies the id of the form associated with the field\r\nfor=&quot;text list&quot; Lists the id references associated with the calculation'),
(907, '&lt;script&gt; &lt;/script&gt;', 'html', 'Encloses client-side scripts within the document; this element can be placed within the head or the body element or it can refer to an external script file\r\nasync=â€asyncâ€ Specifies that the script should be executed asynchronously as soon as it becomes available (HTML5)\r\ncharset=â€charcodeâ€ Specifies the character encoding of the script\r\ndefer=â€deferâ€ Defers execution of the script\r\nlanguage=â€textâ€ Specifies the language of the script (obsolete)\r\nsrc=â€urlâ€ Provides the URL of an external script file\r\ntype=â€mime-typeâ€ Specifies the mime-type of the script'),
(908, '&lt;section&gt; &lt;/section&gt;', 'html', 'Structural element representing a section of the document (HTML5)'),
(909, '&lt;select&gt; &lt;/select&gt;', 'html', 'Creates a selection field (drop-down list box) in a web form\r\nautofocus=â€autofocusâ€ Specifies that the browser should give focus to the selection field as soon as the page loads (HTML5)\r\ndatafld=â€textâ€ Identifies the column from a data source that supplies bound data for the selection field (IE only)\r\ndataformatas=â€html| plaintext|textâ€    Specifies the format of the data in the data source bound with the selection field (IE only)\r\ndatasrc=â€urlâ€ Provides the URL or ID of the data source bound with the selection field (IE only)\r\ndisabled=&quot;disabled&quot; Disables the selection field\r\nform=&quot;id&quot; Provides the id of the form associated with the selection field (HTML5)\r\nmultiple=â€multipleâ€ Allows multiple sections from the field\r\nname=â€textâ€ Specifies the selection field name\r\nsize=â€integerâ€ Specifies the number of visible items in the selection list'),
(914, 'Core Attributes', 'html, Attributes', 'The following attributes apply to all page elements and are supported by most browser versions.\r\n\r\nclass=&quot;text&quot; \r\nSpecifies the class or group to which an element belongs\r\n\r\ncontenteditable= &quot;text list&quot; \r\nSpecifies whether the contents of the element are editable (HTML5)\r\n\r\ncontextmenu=&quot;id&quot; \r\nSpecifies the value of the id attribute on the menu with which to associate the element as a context menu\r\n\r\ndraggable=&quot;true|false&quot; \r\nSpecifies whether the element is draggable (HTML5)\r\n\r\ndropzone= &quot;copy|move|link&quot; \r\nSpecifies what types of content can be dropped on the element and which actions to take with content when it is dropped (HTML5)\r\n\r\nhidden=&quot;hidden&quot; \r\nSpecifies that the element is not yet, or is no longer, relevant and that the element should not be rendered (HTML5)\r\n\r\nid=&quot;text&quot; \r\nSpecifies a unique identifier to be associated with the element\r\n\r\nspellcheck=&quot;true|false&quot; \r\nSpecifies whether the element represents an element whose contents are subject to spell checking and grammar checking (HTML5)\r\n\r\nstyle=&quot;styles&quot; \r\nDefines an inline style for the element\r\n\r\ntitle=&quot;text&quot; \r\nProvides an advisory title for the element'),
(915, 'Language Attributes', 'html, Attributes', 'The web is designed to be universal and has to be adaptable to languages other thanattributes English. Thus, another set of attributes provides language support. This set of attributes is not as widely supported by browsers as the core attributes are. As with the core attributes, they can be applied to most page elements.\r\n\r\ndir=&quot;ltr|rtl&quot; \r\nIndicates the text direction as related to the lang attribute; a value of ltr displays text from left to right; a value of rtl displays text from right to left\r\n\r\nlang=&quot;lang&quot; \r\nIdentifies the language used in the page where lang is the language code name'),
(916, 'Form Attributes', 'html, Attributes, form', 'The following attributes can be applied to most form elements or to a web form itself, but not to other page elements.\r\n\r\naccesskey=&quot;char&quot; \r\nIndicates the keyboard character that can be pressed along with the accelerator key to access a form element\r\n\r\ndisabled=&quot;disabled&quot; Disables a form field for input\r\n\r\ntabindex=&quot;integer&quot; Specifies a form elementâ€™s position in a documentâ€™s tabbing order'),
(917, 'Event Attributes', 'html, Attributes', 'To make web pages more dynamic, HTML supports event attributes that identify scripts to be run in response to an event occurring within an element. For example, clicking a main heading with a mouse can cause a browser to run a program that hides or expands a table of contents. Each event attribute has the form \r\nonevent = â€œscriptâ€ \r\nwhere event is the name of the event attribute and script is the name of the script or command to be run by the browser in response to the occurrence of the event within the element'),
(918, 'Core Events', 'html, Events', 'onabort Loading of the element is aborted by the user. (HTML5)\r\nonclick The mouse button is clicked.\r\noncontextmenu The user requested the context menu for the element. (HTML5)\r\nondblclick The mouse button is double-clicked.\r\nonerror The element failed to load properly. (HTML5)\r\nonkeydown A key is pressed down.\r\nonkeypress A key is initially pressed.\r\nonkeyup A key is released.\r\nonload The element finishes loading. (HTML5)\r\nonmousedown The mouse button is pressed down.\r\nonmousemove The mouse pointer is moved within the elementâ€™s boundaries.\r\nonmouseout The mouse pointer is moved out of the elementâ€™s boundaries.\r\nonmouseover The mouse pointer hovers over the element.\r\nonmouseup The mouse button is released.\r\nonmousewheel The user rotates the mouse wheel.\r\nonreadystatechange The element and its resources finish loading. (HTML5)\r\nonscroll The element or document window is being scrolled. (HTML5)\r\nonshow The user requests that the element be shown as a context menu. (HTML5)\r\nonsuspend The browser suspends retrieving data. (HTML5)'),
(919, 'Document Events', 'html, Events', 'The following list of event attributes applies not to individual elements within the page, but to the entire document as it is displayed within the browser window or frame.\r\n\r\nonafterprint The document has finished printing (IE only).\r\nonbeforeprint The document is about to be printed (IE only).\r\nonload The page is finished being loaded.\r\nonunload The page is finished unloading.'),
(920, 'Form Events', 'html, Events', 'The following list of event attributes applies to either an entire web form or fields within a form.\r\n\r\nonblur The form field has lost the focus.\r\nonchange The value of the form field has been changed.\r\nonfocus The form field has received the focus.\r\nonformchange The user made a change in the value of a form field in the form. (HTML5)\r\nonforminput The value of a control in the form changes. (HTML5)\r\noninput The value of an element changes. (HTML5)\r\noninvalid The form field fails to meet validity constraints. (HTML5)\r\nonreset The form has been reset.\r\nonselect Text content has been selected in the form field.\r\nonsubmit The form has been submitted for processing.'),
(921, 'Drag and Drop Events', 'html, Events', 'The following list of event attributes applies to all page elements and can be used to respond to the user action of dragging and dropping objects in the web page.\r\n\r\nondrag The user continues to drag the element. (HTML5)\r\nondragenter The user ends dragging the element, entering the element into a valid drop target. (HTML5)\r\nondragleave The userâ€™s drag operation leaves the element. (HTML5)\r\nondragover The user continues a drag operation over the element. (HTML5)\r\nondragstart The user starts dragging the element. (HTML5)\r\nondrop The user completes a drop operation over the element. (HTML5)'),
(922, 'Multimedia Events', 'html, Events', 'oncanplay The browser can resume playback of the video or audio, but determines when the playback will have to stop for further buffering.\r\noncanplaythrough The browser can resume playback of the video or audio, and determines the playback can play through without further buffering. (HTML5)\r\nondurationchange The DOM duration of the video or audio element changes. (HTML5)\r\nonemptied The video or audio element returns to the uninitialized state. (HTML5)\r\nonended The end of the video or audio is reached. (HTML5)\r\nonloadeddata The video or audio is at the current playback position for the first time. (HTML5)\r\nonloadedmetadata The duration and dimensions of the video or audio element are determined. (HTML5)\r\nonloadstart The browser begins looking for media data in the video or audio element. (HTML5)\r\nonpause The video or audio is paused. (HTML5)\r\nonplay The video or audio playback is initiated. (HTML5)\r\nonplaying The video or audio playback starts. (HTML5)\r\nonprogress The browser fetches data for the video or audio. (HTML5)\r\nonratechange The video or audio data changes. (HTML5)\r\nonseeked A seek operation on the audio or video element ends. (HTML5)\r\nonseeking Seeking is initiated on the audio or video. (HTML5)\r\nonstalled An attempt to retrieve data for the video or audio is not forthcoming. (HTML5)\r\nontimeupdate The current playback position of the video or audio element changes. (HTML5)\r\nonvolumechange The volume of the video or audio element changes. (HTML5)\r\nonwaiting Playback of the video or audio stops because the next frame is unavailable. (HTML5)'),
(923, '&lt;body&gt; &lt;/body&gt;', 'html', 'Marks the page content to be rendered by the browser\r\nalink=â€colorâ€ Specifies the color of activated links in the document (obsolete)\r\nbackground=â€urlâ€ Specifies the background image file used for the page (obsolete)\r\nbgcolor=â€colorâ€ Specifies the background color of the page (obsolete)\r\nlink=â€colorâ€ Specifies the color of unvisited links (obsolete)\r\nmarginheight=â€integerâ€ Specifies the size of the margin above and below the page (obsolete)\r\nmarginwidth=â€integerâ€ Specifies the size of the margin to the left and right of the page (obsolete)\r\ntext=â€colorâ€ Specifies the color of page text (obsolete)\r\nvlink=â€colorâ€ Specifies the color of previously visited links (obsolete)'),
(924, 'text-shadow box-shadow', 'css', 'text-shadow is used to get shadow in text\r\ne.g. text-shadow: 2px 3px 4px red;\r\n2px 3px  are aspects from where to drop shadow and 4px is the blur size of shadow. to reverse shadow direction use aspects in negative and keep blur unchanged. so we can draw shadow on from all side, just put a comma after shadow from one side and then add to other side.\r\n\r\nbox-shadow is used to draw shadow of a box or section\r\ne.g. box-shadow: 0px 0px 5px black;\r\nthis will draw shadow to box from all sides as a blur. reset is same as that of text-shadow.'),
(925, '&lt;small&gt; &lt;/small&gt;', 'html, elements, tags', 'Represents â€œfinal printâ€ or â€œsmall printâ€ in legal disclaimers and caveats'),
(926, '&lt;source /&gt;', 'html, elements, tags', 'Enables multiple media sources to be specified for audio and video elements (HTML5)\r\nmedia=&quot;media&quot; Specifies the intended media type of the media source\r\nsrc=&quot;url&quot; Specifies the location of the media source\r\ntype=&quot;mime-type&quot; Specifies the MIME type of the media source'),
(927, '&lt;span&gt; &lt;/span&gt; ', 'html, elements, tags', 'Creates a generic inline element\r\ndatafld=â€textâ€ Identifies the column from a data source that supplies bound data for the inline element (IE only)\r\ndataformatas=â€html| plaintext|textâ€ Specifies the format of the data in the data source bound with the inline element (IE only)\r\ndatasrc=â€urlâ€ Provides the URL or ID of the data source bound with the inline element (IE only)'),
(928, '&lt;strong&gt; &lt;/strong&gt; ', 'html, elements, tags', 'Marks the enclosed text as strongly emphasized text'),
(929, '&lt;style&gt; &lt;/style&gt; ', 'html, elements, tags', 'Encloses global style declarations for the document\r\nmedia=â€mediaâ€ Indicates the media of the enclosed style definitions\r\nscoped=â€scopedâ€ Indicates that the specified style information is meant to apply only to the style elementâ€™s parent element (HTML5)\r\ntype=â€mime-typeâ€ Specifies the mime-type of the style definitions'),
(930, '&lt;sub&gt; &lt;/sub&gt;', 'html, elements, tags', 'Marks the enclosed text as subscript text'),
(931, '&lt;summary&gt; &lt;/summary&gt; ', 'html, elements, tags', 'Defines the header of a detail element (HTML5)'),
(932, '&lt;sup&gt; &lt;/sup&gt; ', 'html, elements, tags', 'Marks the enclosed text as superscript text'),
(933, '&lt;table&gt; &lt;/table&gt;', 'html, elements, tags', 'Encloses the contents of a web table\r\n\r\nalign=â€alignâ€       \r\nAligns the table with the surrounding content where align is left, center, or right (obsolete)\r\n\r\nbgcolor=â€colorâ€ \r\nSpecifies the background color of the table (obsolete)\r\n\r\nborder=â€integerâ€ \r\nSpecifies the width of the table border in pixels (obsolete)\r\n\r\ncellpadding= â€integerâ€ \r\nSpecifies the space between the table data and the cell borders in pixels (obsolete)\r\n\r\ncellspacing= â€integerâ€ \r\nSpecifies the space between table cells in pixels (obsolete)\r\n\r\ndatafld=â€textâ€ \r\nIndicates the column from a data source that supplies bound data for the table (IE only)\r\n\r\ndataformatas=â€html|plaintext|textâ€ \r\nSpecifies the format of the data in the data source bound with the table (IE only)\r\n\r\ndatapagesize= â€integerâ€ \r\nSets the number of records displayed within the table (IE only)\r\n\r\ndatasrc=â€urlâ€ \r\nProvides the URL or ID of the data source bound with the table (IE only)\r\n\r\nframe=â€frameâ€ \r\nSpecifies the format of the borders around the table where frame is above, below, border, box, hsides, lhs, rhs, void, or vside (obsolete)\r\n\r\nrules=â€rulesâ€ \r\nSpecifies the format of the tableâ€™s internal borders or gridlines where rules is all, cols, groups, none, or rows (obsolete)\r\n\r\nsummary=â€textâ€ \r\nSupplies a text summary of the tableâ€™s content\r\n\r\nwidth=â€integerâ€ \r\nSpecifies the width of the table in pixels (obsolete)'),
(934, '&lt;p&gt; &lt;/p&gt; ', 'html, elements, tags', 'Marks the enclosed content as a paragraph\r\nalign=â€alignâ€ Horizontally aligns the contents of the paragraph where align is left, center, right, or justify (obsolete)'),
(935, '&lt;param&gt; &lt;/param&gt; ', 'html, elements, tags', 'Marks parameter values sent to an object element or an applet element\r\nname=â€textâ€ Specifies the parameter name\r\ntype=â€mime-typeâ€ Specifies the mime-type of the resource indicated by the value attribute (obsolete)\r\nvalue=â€textâ€ Specifies the parameter value\r\nvaluetype=â€data| ref|objectâ€ Specifies the data type of the value attribute (obsolete)'),
(936, '&lt;pre&gt; &lt;/pre&gt; ', 'html, elements, tags', 'Marks the enclosed text as preformatted text, retaining white space from the document'),
(937, '&lt;progress&gt; &lt;/progress&gt; ', 'html, elements, tags', 'Represents the progress of completion of a task (HTML5)\r\nvalue=&quot;value&quot; Specifies how much of the task has been completed\r\nmax=&quot;value&quot; Specifies how much work the task requires in total'),
(938, '&lt;q&gt; &lt;/q&gt; ', 'html, elements, tags', 'Marks the enclosed text as a quotation\r\ncite=â€urlâ€ Provides the source URL of the quoted content'),
(939, '&lt;rp&gt; &lt;/rp&gt; ', 'html, elements, tags', 'Used in ruby annotations to define what to show browsers that do not support the ruby element (HTML5)'),
(940, '&lt;rt&gt; &lt;/rt&gt; ', 'html, elements, tags', 'Defines explanation to ruby annotations (HTML5)'),
(941, '&lt;ruby&gt; &lt;/ruby&gt;', 'html, elements, tags', 'Defines ruby annotations (HTML5)'),
(942, '&lt;s&gt; &lt;/s&gt;', 'html, elements, tags', 'Marks the enclosed text as strikethrough text'),
(943, '&lt;samp&gt; &lt;/samp&gt; ', 'html, elements, tags', 'Marks the enclosed text as a sequence of literal characters'),
(944, '&lt;nobr&gt; &lt;/nobr&gt; ', 'html, elements, tags', 'Disables line wrapping for the enclosed content (not part of the W3C specifications, but supported by most browsers)'),
(945, '&lt;noembed&gt; &lt;/noembed&gt; ', 'html, elements, tags', 'Encloses alternate content for browsers that do not support the embed element (not part of the W3C specifications, but supported by most browsers)\r\n'),
(946, '&lt;noframe&gt; &lt;/noframe&gt; ', 'html, elements, tags', 'Encloses alternate content for browsers that do not support frames (obsolete)'),
(947, '&lt;noscript&gt; &lt;/noscript&gt; ', 'html, elements, tags', 'Encloses alternate content for browsers that do not support client-side scripts');
INSERT INTO `y2019` (`UID`, `NAME`, `RELATED`, `DESCRIPTION`) VALUES
(948, '&lt;object&gt; &lt;/object&gt; ', 'html, elements, tags', 'Places an embedded object (image, applet, sound clip, video clip, etc.) into the page\r\narchive=â€urlâ€ Specifies the URL of an archive containing classes and other resources preloaded for use with the object (obsolete)\r\nalign=â€alignâ€ Aligns the object with the surrounding content where align is absbottom, absmiddle, baseline, bottom, left, middle, right, texttop, or top (obsolete)\r\nborder=â€integerâ€ Specifies the width of the border around the object (obsolete)\r\nclassid=â€urlâ€ Provides the URL of the object (obsolete)\r\ncodebase=â€urlâ€ Specifies the base path used to resolve relative references within the embedded object (obsolete)\r\ncodetype=â€mime-typeâ€ Indicates the mime-type of the embedded objectâ€™s code (obsolete)\r\ndata=â€urlâ€ Provides the URL of the objectâ€™s data file\r\ndatafld=â€textâ€ Identifies the column from a data source that supplies bound data for the embedded object (IE only)\r\ndataformatas=â€html| plaintext|textâ€ Specifies the format of the data in the data source bound with the embedded object (IE only)\r\ndatasrc=â€urlâ€ Provides the URL or ID of the data source bound with the embedded object (IE only)\r\ndeclare=â€declareâ€ Declares the object without embedding it on the page (obsolete)\r\nform=â€idâ€ Specifies the id of the form associated with the object (HTML5)\r\nheight=â€integerâ€ Specifies the height of the object in pixels\r\nhspace=â€integerâ€ Specifies the horizontal space around the image in pixels (obsolete)\r\nname=â€textâ€ Specifies the name of the embedded object\r\nstandby=â€textâ€ Specifies the message displayed by the browser while loading the embedded object (obsolete)\r\ntype=â€mime-typeâ€ Indicates the mime-type of the embedded object\r\nvspace=â€integerâ€ Specifies the vertical space around the embedded object (obsolete)\r\nwidth=â€integerâ€ Specifies the width of the object in pixels'),
(949, '&lt;ol&gt; &lt;/ol&gt; ', 'html, elements, tags', 'Contains an ordered list of items\r\nreversed=â€reversedâ€ Specifies that the list markers are to be displayed in descending order (HTML5)\r\nstart=â€integerâ€ Specifies the starting value in the list\r\ntype=â€A|a|I|i|1â€œ Specifies the bullet type associated with the list items (deprecated)'),
(950, '&lt;optgroup&gt; &lt;/optgroup&gt; ', 'html, elements, tags', 'Contains a group of option elements in a selection field\r\ndisabled=â€disabledâ€ Disables the option group control\r\nlabel=â€textâ€ Specifies the label for the option group'),
(951, '&lt;option&gt; &lt;/option&gt; ', 'html, elements, tags', 'Formats an option within a selection field\r\ndisabled=â€disabledâ€ Disables the option control\r\nlabel=â€textâ€ Supplies the text label associated with the option\r\nselected=â€selectedâ€ Selects the option by default\r\nvalue=â€textâ€ Specifies the value associated with the option'),
(952, '&lt;nav&gt; &lt;/nav&gt; ', 'html, elements, tags', 'Structural element defining a navigation list (HTML5)'),
(953, '&lt;tbody&gt; &lt;/tbody&gt; ', 'html, elements, tags', 'Encloses the content of the web table body\r\nalign=â€alignâ€ Specifies the alignment of the contents in the cells of the table body where align is left, center, right, justify, or char (obsolete)\r\nchar=â€charâ€ Specifies the character used for aligning the table body contents when the align attribute is set to &quot;char&quot; (obsolete)\r\ncharoff=â€integerâ€ Specifies the offset in pixels from the alignment character specified in the char attribute (obsolete)\r\nvalign=â€alignâ€ Specifies the vertical alignment of the contents in the cells of the table body where align is baseline, bottom, middle, or top (obsolete)'),
(954, '&lt;td&gt; &lt;/td&gt; ', 'html, elements, tags', 'Encloses the data of a table cell\r\nabbr=â€textâ€ Supplies an abbreviated version of the contents of the table cell (obsolete)\r\nalign=â€alignâ€ Specifies the horizontal alignment of the table cell data where align is left, center, or right (obsolete)\r\nbgcolor=â€colorâ€ Specifies the background color of the table cell (obsolete)\r\nchar=â€charâ€ Specifies the character used for aligning the table cell contents when the align attribute is set to &quot;char&quot; (obsolete)\r\ncharoff=â€integerâ€ Specifies the offset in pixels from the alignment character specified in the char attribute (obsolete)\r\ncolspan=â€integerâ€ Specifies the number of columns the table cell spans\r\nheaders=â€textâ€ Supplies a space-separated list of table headers associated with the table cell\r\nheight=â€integerâ€ Specifies the height of the table cell in pixels (obsolete)\r\nnowrap=â€nowrapâ€ Disables line-wrapping within the table cell (obsolete)\r\nrowspan=â€integerâ€ Specifies the number of rows the table cell spans\r\nscope=â€col|colgroup |row|rowgroupâ€ Specifies the scope of the table for which the cell provides data (obsolete)\r\nvalign=â€alignâ€ Specifies the vertical alignment of the contents of the table cell where align is top, middle, or bottom (obsolete)\r\nwidth=â€integerâ€ Specifies the width of the cell in pixels (obsolete)'),
(955, '&lt;textarea&gt; &lt;/textarea&gt; ', 'html, elements, tags', 'Marks the enclosed text as a text area input box in a web form\r\nautofocus=â€autofocusâ€ Specifies that the text area is to receive the focus when the page is loaded (HTML5)\r\ndatafld=â€textâ€ Specifies the column from a data source that supplies bound data for the text\r\narea box (IE only)\r\ndataformatas=â€html| plaintext|textâ€ Specifies the format of the data in the data source bound with the text area box (IE only)\r\ndatasrc=â€urlâ€ Provides the URL or ID of the data source bound with the text area box (IE only)\r\ncols=â€integerâ€ Specifies the width of the text area box in characters\r\ndisable=&quot;disable&quot; Disables the text area field\r\nform=&quot;id&quot; Associates the text area with the form identified by id (HTML5)\r\nmaxlength=&quot;integer&quot; Specifies the maximum allowed value length for the text area\r\nname=â€textâ€ Specifies the name of the text area box\r\nplaceholder=â€textâ€ Provides a short hint intended to aid the user when entering data (HTML5)\r\nreadonly=â€readonlyâ€ Specifies the value of the text area box, cannot be modified\r\nrequired=â€requiredâ€ Indicates whether the text area is required for validation (HTML5)\r\nrows=â€integerâ€ Specifies the number of visible rows in the text area box\r\nwrap=â€soft|hardâ€ Specifies how text is wrapped within the text area box and how that text-wrapping information is sent to the server-side program\r\n'),
(956, '&lt;tfoot&gt; &lt;/tfoot&gt; ', 'html, elements, tags', 'Encloses the content of the web table footer\r\nalign=â€alignâ€ Specifies the alignment of the contents in the cells of the table footer where align is left, center, right, justify, or char (obsolete)\r\nchar=â€charâ€ Specifies the character used for aligning the table footer contents when the align attribute is set to &quot;char&quot; (obsolete)\r\ncharoff=â€integerâ€ Specifies the offset in pixels from the alignment character specified in the char attribute (obsolete)\r\nvalign=â€alignâ€ Specifies the vertical alignment of the contents in the cells of the table footer where align is baseline, bottom, middle, or top (obsolete)'),
(957, '&lt;th&gt; &lt;/th&gt; ', 'html, elements, tags', 'Encloses the data of a table header cell\r\nabbr=â€textâ€ Supplies an abbreviated version of the contents of the table cell (obsolete)\r\nalign=â€alignâ€ Specifies the horizontal alignment of the table cell data where align is left, center, or right (obsolete)\r\naxis=â€text listâ€ Provides a list of table categories that can be mapped to a table hierarchy (obsolete)\r\nbgcolor=â€colorâ€ Specifies the background color of the table cell (obsolete)\r\nchar=â€charâ€ Specifies the character used for aligning the table cell contents when the align attribute is set to &quot;char&quot; (obsolete)\r\ncharoff=â€integerâ€ Specifies the offset in pixels from the alignment character specified in the char attribute (obsolete)\r\ncolspan=â€integerâ€ Specifies the number of columns the table cell spans\r\nheaders=â€textâ€ A space-separated list of table headers associated with the table cell\r\nheight=â€integerâ€ Specifies the height of the table cell in pixels (obsolete)\r\nnowrap=â€nowrapâ€ Disables line-wrapping within the table cell (obsolete)\r\nrowspan=â€integerâ€ Specifies the number of rows the table cell spans\r\nscope=â€col|colgroup| row|rowgroupâ€ Specifies the scope of the table for which the cell provides data\r\nvalign=â€alignâ€ Specifies the vertical alignment of the contents of the table cell where align is top, middle, or bottom (obsolete)\r\nwidth=â€integerâ€ Specifies the width of the cell in pixels (obsolete)'),
(958, '&lt;thead&gt; &lt;/thead&gt; ', 'html, elements, tags', 'Encloses the content of the web table header\r\nalign=â€alignâ€ Specifies the alignment of the contents in the cells of the table header where align is left, center, right, justify, or char (obsolete)\r\nchar=â€charâ€ Specifies the character used for aligning the table header contents when the align attribute is set to &quot;char&quot; (obsolete)\r\ncharoff=â€integerâ€ Specifies the offset in pixels from the alignment character specified in the char attribute (obsolete)\r\nvalign=â€alignâ€ Specifies the vertical alignment of the contents in the cells of the table header where align is baseline, bottom, middle, or top (obsolete)'),
(959, '&lt;time&gt; &lt;/time&gt; ', 'html, elements, tags', 'Represents a date and/or time (HTML5)'),
(960, '&lt;title&gt; &lt;/title&gt; ', 'html, elements, tags', 'Specifies the title of the document, placed in the head section of the document\r\n'),
(961, '&lt;tr&gt; &lt;/tr&gt; ', 'html, elements, tags', 'Encloses the content of a row within a web table\r\nalign=â€alignâ€ Specifies the horizontal alignment of the data in the rowâ€™s cells where align is left, center, or right (obsolete)\r\nchar=â€charâ€ Specifies the character used for aligning the table row contents when the align attribute is set to &quot;char&quot; (obsolete)\r\ncharoff=â€integerâ€ Specifies the offset in pixels from the alignment character specified in the char attribute (obsolete)\r\nvalign=â€alignâ€ Specifies the vertical alignment of the contents of the table row where align is baseline, bottom, middle, or top (obsolete)'),
(962, '&lt;track&gt; &lt;/track&gt; ', 'html, elements, tags', 'Enables supplementary media tracks such as subtitles and captions (HTML5)\r\ndefault=&quot;default&quot; Enables the track if the userâ€™s preferences do not indicate that another track would be more appropriate\r\nkind=&quot;kind&quot; Specifies the kind of track, where kind is subtitles, captions, descriptions, chapters, or metadata\r\nlabel=&quot;text&quot; Provides a user-readable title for the track\r\nsrc=&quot;url&quot; Provides the address of the track\r\nsrclang=&quot;lang&quot; Provides the language of the track'),
(963, '&lt;tt&gt; &lt;/tt&gt; ', 'html, elements, tags', 'Marks the enclosed text as teletype or monospaced text (deprecated)\r\n'),
(964, '&lt;u&gt; &lt;/u&gt; ', 'html, elements, tags', 'Marks the enclosed text as underlined text (deprecated)'),
(965, '&lt;ul&gt; &lt;/ul&gt; ', 'html, elements, tags', 'Contains an unordered list of items\r\ncompact=â€compactâ€ Reduces the space between unordered list items (obsolete)\r\ntype=â€disc|square| circleâ€ Specifies the bullet type associated with the list items (obsolete)'),
(966, '&lt;var&gt; &lt;/var&gt; ', 'html, elements, tags', 'Marks the enclosed text as containing a variable name'),
(967, '&lt;video&gt; &lt;/video&gt;', 'html, elements, tags', 'Defines an embedded video clip (HTML5)\r\naudio=&quot;text&quot; Defines the default audio state; currently only &quot;muted&quot; is supported\r\nautoplay=&quot;autoplay&quot; Specifies that the video should begin playing automatically when the page is loaded\r\ncontrols=&quot;controls&quot; Instructs the browser to display the video controls\r\nheight=&quot;value&quot; Provides the height of the video clip in pixels\r\nloop=&quot;loop&quot; Instructs the browser to loop the clip back to the beginning\r\npreload=&quot;auto| metadata|none&quot; Indicates whether to preload the video clip data\r\nposter=&quot;url&quot; Specifies the location of an image file to act as a poster for the video clip\r\nwidth=&quot;value&quot; Provides the width of the video clip in pixels'),
(968, '&lt;wbr /&gt; ', 'html, elements, tags', 'Indicates a line-break opportunity (HTML5)'),
(969, '&lt;xml&gt; &lt;/xml&gt; ', 'html, elements, tags', 'Encloses XML content (also referred to as a data island ) or references an external XML document (IE only)\r\nns=â€urlâ€ Provides the URL of the XML data island (IE only)\r\nprefix=â€textâ€ Specifies the namespace prefix of the XML content (IE only)\r\nsrc=â€urlâ€ Provides the URL of an external XML document (IE only)'),
(970, '&lt;xmp&gt; &lt;/xmp&gt; ', 'html, elements, tags', 'Marks the enclosed text as preformatted text, preserving the white space of the source document; replaced by the pre element (deprecated)'),
(971, 'gettype()', 'php', 'string gettype($var) //GETS $var TYPE'),
(972, 'settype()', 'php', 'bool settype ($var, â€˜type_nameâ€™) //SETS $var TYPE'),
(973, 'is_funcName($var) check functions', 'php, check functions', 'is_array(), is_double(), is_float, is_real(), is_long(), is_int(), is_integer(), is_string(), is_bool(), is_object(), is_resource(), is_null(), is_scalar(), is_numeric(), is_callable()\r\n\r\nThey do checks according to their names.\r\nfor example is_array($var) check if $var is an array and return true if it is, otherwise returns false.'),
(974, 'isset()', 'php, check functions', 'bool isset (mixed var); [;mixed var[,â€¦]])\r\nchecks if the variable exits or not.\r\nfor example: \r\n$var = 20;\r\nif (isset($var)) {\r\necho &quot;variable is set&quot;;\r\n} else {\r\necho &quot;variable is not set&quot;;\r\n}\r\nwill echo the statement because $var is set to 20, in the second case if $var is not set it will echo else part.'),
(975, 'unset()', 'php, resets', 'void unset(mixed var); [;mixed var[,â€¦]])\r\n\r\nwipes a variable out of existence.\r\n\r\nfor example:\r\n$var = 20;\r\nunset($var) will wipe out $var, means it will not exist anymore.\r\n\r\nunset() can take many parameter variables as input.'),
(976, 'empty()', 'php, check functions', 'bool empty(mixed var);\r\n\r\nchecks if $variable exists and has a non-empty, non-zero value.\r\nas it is a bool type function it will return true if variable exists and has a non-empty and non-zero value, otherwise will return false.'),
(977, 'Navigating Within An Array', 'php, arrays', 'â€¢	current ($array_name); //RETURN FIRST ELEMENT \r\nâ€¢	reset ($array_name) //RESET ARRAY TO START\r\nâ€¢	end ($array_name)	//SENDS POINTER TO THE END OF ARRAY\r\nâ€¢	next () OR each()	//ADVANCES THE POINTER FORWORD ONE ELEMENT \r\nâ€¢	pos () \r\nâ€¢	prev ()	//OPPOSITE WORK OF next()'),
(978, 'file_exists()', 'php, file functions', 'file_exists(â€œ$location/file.txtâ€);	//RETURNS TRUE IF FILE EXISTS'),
(979, 'filesize()', 'php, file functions', 'filesize(â€œ$location/file.txtâ€);	//CHECKS THE SIZE OF FILE'),
(980, 'nl2br()', 'php, file functions, formatting', 'nl2br() function:\r\nnl2br is used to convert the new line characters (\n)  to break tags &lt;br /&gt; of html.'),
(981, 'unlink()', 'php, resets', 'unlink(â€œ$location/file.txtâ€); //DELETES THE FILE IF PRESENT AND HAVE PERMISSIONS\r\ndeletes the file if present and have permissions on that file path and file itself.'),
(982, 'addslashes() and stripslashes()', 'php, string formatting', 'In addition to using string functions to reformat a string visually, you can use some of these functions to reformat strings for storage in a database.\r\nCertain characters are perfectly valid as part of a string but can cause problems, particularly when you are inserting data into a database because the database could interpret these characters as control characters.The problematic ones are quotation marks (single and double), backslashes (\\), and the NULL character. \r\n\r\nYou need to find a way of marking or escaping these characters so that databases such as MySQL can understand that you meant a literal special character rather than a control sequence. To escape these characters, add a backslash in front of them. \r\n\r\nFor example, â€œ (double quotation mark) becomes \\\\â€ (backslash double quotation mark), and \\\\ (backslash) becomes \\\\\\\\ (backslash backslash). (This rule applies universally to special characters, so if you have \\\\\\\\ in your string, you need to replace it with \\\\\\\\\\\\\\\\.) \r\n\r\nPHP provides two functions specifically designed for escaping characters. Before you write any strings into a database, you should reformat them with addslashes(), as follows if your PHP configuration does not already have this functionality turned on by default: \r\n\r\n$feedback = addslashes(trim($_POST[\'feedback\'])); \r\n\r\nLike many of the other string functions, addslashes() takes a string as a parameter and returns the reformatted string.\r\n\r\nIf the configuration of PHP is set up to add and strip slashes automatically.This capability is controlled by the magic_quotes_gpc configuration directive in its name.The letters gpc, which is turned on by default in new installations of PHP, stand for GET, POST, and cookie.\r\nThis means that variables coming from these sources are automatically quoted.\r\nYou can check whether this directive is switched on in your system by using the get_magic_quotes_gpc() function, which returns true if strings from these sources are being automatically quoted for you. \r\nIf this directive is on in your system, you need to call stripslashes() before displaying user data; otherwise, the slashes will be displayed.'),
(986, 'Joining and Splitting Strings with String Functions', 'php, strings', 'Joining and Splitting Strings with String Functions\r\n\r\nUsing explode(), implode(), and join()\r\n\r\nOften, you may want to look at parts of a string individually. For example, you might want to look at words in a sentence (say, for spellchecking) or split a domain name or email address into its component parts. PHP provides several string functions (and one regular expression function) that allow you to do this.\r\n\r\nThe first function explode(), has the following prototype: \r\n\r\narray explode(string separator, string input [, int limit]);\r\n\r\nThis function takes a string input and splits it into pieces on a specified separator string. The pieces are returned in an array. You can limit the number of pieces with the optional limit parameter.\r\nTo get the domain name from the customerâ€™s email address in the script, you can use the following code:\r\n\r\n$email_array = explode(â€˜@â€™, $email);\r\n\r\nThis call to explode() splits the customerâ€™s email address into two parts: the username, which is stored in $email_array[0], and the domain name, which is stored in $email_array[1]. Now you can test the domain name to determine the customerâ€™s origin and then send the feedback to the appropriate person:\r\n\r\nif ($email_array[1] == â€œbigcustomer.comâ€) {\r\n$toaddress = â€œhm@example.comâ€;\r\n} else {\r\n$toaddress = â€œfeedback@example.comâ€;\r\n}\r\n\r\nIf the domain is capitalized or mixed case, however, this approach will not work.You could avoid this problem by first converting the domain to all uppercase or all lowercase and then checking for a match, as follows:\r\n\r\nif (strtolower($email_array[1]) == â€œbigcustomer.comâ€) {\r\n$toaddress = â€œhm@example.comâ€;\r\n} else {\r\n$toaddress = â€œfeedback@example.comâ€;\r\n}\r\n\r\nYou can reverse the effects of explode() by using either implode() or join(), which are identical. For example,\r\n\r\n$new_email = implode(â€˜@â€™, $email_array);\r\n\r\nThis statement takes the array elements from $email_array and joins them with the string passed in the first parameter. The function call is similar to explode(), but the effect is the opposite.'),
(987, 'strtok()', 'php, strings', 'Unlike explode(), which breaks a string into all its pieces at one time, strtok() gets pieces (called tokens) from a string one at a time. strtok() is a useful alternative to using explode() for processing words from a string one at a time.\r\nThe prototype for strtok() is\r\nstring strtok(string input, string separator); The separator can be either a character or a string of characters, but the input string is split on each of the characters in the separator string rather than on the whole separator string (as explode does).\r\nCalling strtok() is not quite as simple as it seems in the prototype.To get the first token from a string, you call strtok() with the string you want tokenized and a separator.To get the subsequent tokens from the string, you just pass a single parameterâ€”the separator.The function keeps its own internal pointer to its place in the string. If you want to reset the pointer, you can pass the string into it again.\r\nstrtok() is typically used as follows:\r\n\r\n$token = strtok($feedback, â€˜â€œ â€œ);\r\necho $token.â€&lt;br /&gt;â€;\r\nwhile ($token != â€œâ€) {\r\n$token = strtok(â€œ â€œ);\r\necho $token.â€&lt;br /&gt;â€;\r\n}\r\n\r\nAs usual, itâ€™s a good idea to check that the customer actually typed some feedback in the form, using, for example, the empty() function.We have omitted these checks for brevity.\r\nThe preceding code prints each token from the customerâ€™s feedback on a separate line and loops until there are no more tokens. Empty strings are automatically skipped in the process.'),
(988, 'substr()', 'php, strings', 'The substr() function enables you to access a substring between given start and end points of a string. Itâ€™s not appropriate for the example used here but can be useful when you need to get at parts of fixed format strings. The substr() function has the following prototype:\r\n\r\nstring substr(string string, int start[, int length] );\r\n\r\nThis function returns a substring copied from within string. The following examples use this test string:\r\n\r\n$test = â€˜Your customer service is excellentâ€™;\r\n\r\nIf you call it with a positive number for start (only), you will get the string from the start position to the end of the string. For example, substr($test, 1); returns our customer service is excellent. Note that the string position starts from 0, as with arrays.\r\nIf you call substr() with a negative start (only), you will get the string from the end of the string minus start characters to the end of the string. For example, substr($test, -9); returns excellent.\r\nThe length parameter can be used to specify either a number of characters to return (if it is positive) or the end character of the return sequence (if it is negative). For example, substr($test, 0, 4); returns the first four characters of the stringâ€”namely, Your.The code echo substr($test, 5, -13);\r\nreturns the characters between the fourth character and the thirteenth-to-last characterâ€”that is, customer service.The first character is location 0. So location 5 is the sixth character.'),
(989, 'Comparing Strings', 'php, strings', 'Performing String Ordering: strcmp(), strcasecmp(), and strnatcmp()\r\n\r\nThe strcmp(), strcasecmp(), and strnatcmp() functions can be used to order strings. This capability is useful when you are sorting data.\r\nThe prototype for strcmp() is\r\n\r\nint strcmp(string str1, string str2);\r\n\r\nThe function expects to receive two strings, which it compares. If they are equal, it will return 0. If str1 comes after (or is greater than) str2 in lexicographic order, strcmp() will return a number greater than zero. If str1 is less than str2, strcmp() will return a number less than zero.This function is case sensitive.\r\n\r\nThe function strcasecmp() is identical except that it is not case sensitive.\r\n\r\nThe function strnatcmp() and its nonâ€“case sensitive twin, strnatcasecmp() compare strings according to a â€œnatural ordering,â€ which is more the way a human would do it. \r\n\r\nFor example, strcmp() would order the string 2 as greater than the string 12 because it is lexicographically greater. strnatcmp() would order them the other way around'),
(990, 'strlen()', 'php, strings', 'Testing String Length with strlen() You can check the length of a string by using the strlen() function. If you pass it a string, this function will return its length. For example, the result of code is 5:\r\n\r\necho\'strlen(&quot;hello&quot;);\r\n\r\nYou can use this function for validating input data. Consider the email address on the sample form, stored in $email. One basic way of validating an email address stored in $email is to check its length. By our reasoning, the minimum length of an email address is six charactersâ€”for example, a@a.to if you have a country code with no second-level domains, a one-letter server name, and a one-letter email address.Therefore, an error could be produced if the address is not at least this length:\r\n\r\nif (strlen($email) &lt; 6){\r\necho â€˜That email address is not validâ€™;\r\nexit; // force execution of PHP script\r\n}\r\n\r\nClearly, this approach is a very simplistic way of validating this information.We look at better ways in the next section.'),
(991, 'create table in mysql', 'mysql, tables', 'CREATE TABLE BASIC (\r\nuid INT NOT NULL AUTO_INCREMENT PRIMARY KEY,\r\nname VARCHAR (50) NOT NULL DEFAULT â€˜NO NAME SPECIFIEDâ€™\r\n) ENGINE = INNODB;\r\n\r\nïƒ˜	TABLE HAS AUTO INCREMENT FIELD,\r\nïƒ˜	PRIMARY KEY,\r\nïƒ˜	DEFAULT USAGE, \r\nïƒ˜	NOT NULL,\r\nïƒ˜	HAS BASIC SYNTEX FOR CREATE A TABLE IN MY SQL.'),
(992, 'alter table operations', 'mysql, tables', 'ALTER TABLE BASIC AUTO_INCREMENT = 1000;\r\nïƒ˜	AUTO INCREMENT STARTS FROM 1000,\r\n\r\nALTER TABLE BASIC ADD COLUMN\r\naddress VARCHAR (100);\r\nïƒ˜	ADDS COLUMN\r\n\r\nALTER TABLE BASIC DROP address;\r\nïƒ˜	DROPS COLUMN\r\n\r\nALTER TABLE BASIC CHANGE name \r\nname VARCHAR (30) NOT NULL DEFAULT â€˜NO NAMEâ€™;\r\nïƒ˜	CHANGES ALREADY CREATED COLUMN.\r\n\r\nALTER TABLE BASIC ADD PRIMARY KEY (uid);\r\n\r\nALTER TABLE BASIC DROP PRIMARY KEY;\r\nïƒ˜	ADDS PRIMARY KEY IF NOT ALREADY,\r\nïƒ˜	REMOVES PRIMARY KEY.\r\n\r\nPRIMARY KEY (uid, name);\r\nALTER TABLE ADD PRIMARY KEY (uid, name);\r\nïƒ˜	TWO OR MORE COLUMNS AS PRIMARY KEY.'),
(993, 'update operations in mysql', 'mysql, tables', 'UPDATE BASIC SET uid = 89, name = â€˜some nameâ€™ WHERE uid = 23;\r\nïƒ˜	UPDATE FROM ONE TO OTHER.\r\n\r\nUPDATE BASIC SET name = â€˜Some Nameâ€™;\r\nïƒ˜	SETS â€˜SOME NAMEâ€™ TO ALL FIELDS OF NAME COLUMN.\r\n\r\nDELETE FROM BASIC WHERE uid = 32;\r\nïƒ˜	DELETE OPERATION.'),
(994, 'select operations in mysql', 'mysql, tables', 'SELECT * FROM BASIC; 			//DISPLAY ALL RECORDS\r\n\r\nSELECT name FROM BASIC; 		//DISPLAY ONLY name \r\n\r\nSELECT name FROM BASIC WHERE uid = 22;	//DISPLAY name OF uid 22\r\n\r\nSELECT uid FROM BASIC WHERE name LIKE â€˜A%â€™; \r\n\r\nSELECT DISTINCT name FROM BASIC;		//UNIQUE SELECTION OF name.\r\n\r\nSELECT CONCAT (uid,â€™     â€˜,name) AS OUT_PUT FROM BASIC;\r\n\r\nïƒ˜	COMBINE RECORDS AND NAME THEM AS OUT_PUT.\r\n\r\nSELECT CONCAT (UPPER (SUBSTRING (name,1,1)), LOWER (SUBSTRING (name,2,50))) FROM BASIC;\r\n\r\nïƒ˜	CHANGE OF CASES.'),
(995, 'create view in mysql', 'mysql, tables', 'CREATE VIEW view_name AS SELECT * FROM BASIC;	\r\n\r\nïƒ˜	CREATE VIEW NAMES view_name WITH ALL THE RECORDS OF BASIC.'),
(996, 'date quires in mysql', 'mysql, tables', 'CURDATE (); 		//DISPLAY CURRENT DATE.\r\n\r\nYEAR (CURDATE ()); 	//DISPLAY CURRENT YEAR.\r\n\r\nMONTH (CURDATE ()); 		//CURRENT MONTH.\r\n\r\nDAY (CURDATE ());		//CURRENT DAY.'),
(997, 'or , and &amp; order by in mysql', 'mysql, tables', 'SELECT column name AS SomeOtherName FROM TABLE_NAME;	\r\n\r\n\r\nïƒ¼	OR &amp; AND ARE USED TO COMBINE MULTIPLE OPERATIONS.\r\nïƒ¼	DESC TABLE_NAME USED TO SEE DESCRIPTION OF TABLE.\r\n\r\nORDER BY column name ASC; 		//ASC = ASCENDING, DESC = DESCENDING.'),
(998, 'create table in mysql with foreign key', 'mysql, tables', 'CREATE TABLE OTHER (\r\nid INT NOT NULL PRIMARY KEY,\r\nCONSTRAINT id FOREIGN KEY (id) REFERENCES BASIC.uid\r\n) ENGINE = INNODB;\r\nïƒ¼	TABLE WITH FOREIGN KEY id REFERENCING TO uid OF TABLE BASIC CREATED ABOVE.'),
(999, 'insert operations in mysql', 'mysql, tables', 'DIFFERENET WAYS TO INSERT DATA INTO MYSQL TABLES\r\n\r\nINSERT INTO BASIC VALUES (23, â€˜KYA PATAâ€™);\r\n\r\nINSERT INTO BASIC VALUES (23, â€˜KYA PATAâ€™), â€¦, (25, â€˜KUSS TAAMâ€™);\r\n\r\nINSERT INTO BASIC (name) VALUES (â€˜KYA PATAâ€™);\r\n\r\nINSERT INTO BASIC SET uid = 23, name = â€˜KYA PATAâ€™;'),
(1000, 'create users and grant permissions', 'mysql, user permissions', 'create administrator account access in mysql\r\n\r\nGRANT ALL		//GIVES ALL PERMISSIONS\r\nON *.* 			//ON ALL DATABASES\r\nTO username IDENTIFIED BY â€œpasswordâ€	//TO username WITH PASSWORD = password\r\nWITH GRANT OPTION;		//USING GRANT COMMAND\r\n\r\nnormal user access\r\n\r\nGRANT INSERT, DELETE, SELECT, UPDATE	//ACCESS TO THESE FUNCTIONS ONLY\r\nON *.company			//ONLY ON DATABASE NAMED company\r\nTO username IDENTIFIED BY â€œpasswordâ€\r\nWITH GRANT OPTION;'),
(1001, 'Characteristics of the Database Approach', 'DBMS, Intro', 'Characteristics of the Database Approach\r\n\r\nA number of characteristics distinguish the database approach from the much older approach of writing customized programs to access data stored in files. \r\nIn the database approach, a single repository maintains data that is defined once and then accessed by various users repeatedly through queries, transactions, and application programs. The main characteristics of the database approach versus the file-processing approach are the following:\r\n\r\nâ–  Self-describing nature of a database system\r\n	A fundamental characteristic of the database approach is that the database system contains not only the database itself but also a complete definition or description of the database structure and constraints. This definition is stored in the DBMS catalog, which contains information such as the structure of each file, the type and storage format of each data item, and various constraints on the data. The information stored in the catalog is called meta-data, and it describes the structure of the primary database.\r\n	The catalog is used by the DBMS software and also by database users who need information about the database structure. A general-purpose DBMS software package is not written for a specific database application. Therefore, it must refer to the catalog to know the structure of the files in a specific database, such as the type and format of data it will access.\r\n\r\nâ–  Insulation between programs and data, and data abstraction \r\n	In traditional file processing, the structure of data files is embedded in the application programs, so any changes to the structure of a file may require changing all programs that access that file. By contrast, DBMS access programs do not require such changes in most cases. The structure of data files is stored in the DBMS catalog separately from the access programs. We call this property program-data independence.\r\n	An operation (also called a function or method) is specified in two parts. The interface (or signature) of an operation includes the operation name and the data types of its arguments (or parameters). The implementation (or method) of the operation is specified separately and can be changed without affecting the interface. User application programs can operate on the data by invoking these operations through their names and arguments, regardless of how the operations are implemented. This may be termed program-operation independence.\r\nNote: The characteristic that allows program-data independence and program-operation independence is called data abstraction.\r\n\r\nâ–  Support of multiple views of the data \r\n	A database typically has many types of users, each of whom may require a different perspective or view of the database. A view may be a subset of the database or it may contain virtual data that is derived from the database files but is not explicitly stored. Some users may not need to be aware of whether the data they refer to is stored or derived. A multiuser DBMS whose users have a variety of distinct applications must provide facilities for defining multiple views.\r\n\r\nâ–  Sharing of data and multiuser transaction processing\r\n	A multiuser DBMS, as its name implies, must allow multiple users to access the database at the same time. This is essential if data for multiple applications is to be integrated and maintained in a single database. The DBMS must include concurrency control software to ensure that several users trying to update the same data do so in a controlled manner so that the result of the updates is correct.\r\nNote: The concept of a transaction has become central to many database applications. A transaction is an executing program or process that includes one or more database accesses, such as reading or updating of database records. Each transaction is supposed to execute a logically correct database access if executed in its entirety without interference from other transactions. The DBMS must enforce several transaction properties.'),
(1002, 'Data Models, Schemas, and Instances', 'dbms, models', 'Data Models, Schemas, and Instances\r\n\r\nA data modelâ€”a collection of concepts that can be used to describe the structure of a databaseâ€”provides the necessary means to achieve this abstraction. By structure of a database we mean the data types, relationships, and constraints that apply to the data. Most data models also include a set of basic operations for specifying retrievals and updates on the database. \r\n\r\nCategories of Data Models\r\n\r\nHigh-level or conceptual data models provide concepts that are close to the way many users perceive data, whereas low-level or physical data models provide concepts that describe the details of how data is stored on the computer storage media, typically magnetic disks.\r\n\r\nConcepts provided by physical data models are generally meant for computer specialists, not for end users. Between these two extremes is a class of representational (or implementation) data models, which provide concepts that may be easily understood by end users but that are not too far removed from the way data is organized in computer storage. Representational data models hide many details of data storage on disk but can be implemented on a computer system directly.\r\nConceptual data models use concepts such as entities, attributes, and relationships.\r\n\r\nAn entity represents a real-world object or concept, such as an employee or a project from the miniworld that is described in the database.\r\n\r\nAn attribute represents some property of interest that further describes an entity, such as the employeeâ€™s name or salary.\r\n\r\nA relationship among two or more entities represents an association among the entities, for example, a works-on relationship between an employee and a project.\r\n\r\nRepresentational or implementation data models are the models used most frequently in traditional commercial DBMSs. These include the widely used relational data model, as well as the so-called legacy data modelsâ€”the network and hierarchical modelsâ€”that have been widely used in the past.\r\nAn access path is a search structure that makes the search for particular database records efficient, such as indexing or hashing. An index is an example of an access path that allows direct access to data using an index term or a keyword.\r\nAnother class of data models is known as self-describing data models. The data storage in systems based on these models combines the description of the data with the data values themselves. In traditional DBMSs, the description (schema) is separated from the data. These models include XML as well as many of the key-value stores and NOSQL systems that were recently created for managing big data.\r\n\r\nSchemas, Instances, and Database State\r\n\r\nIn a data model, it is important to distinguish between the description of the database and the database itself. The description of a database is called the database schema, which is specified during database design and is not expected to change frequently.\r\nMost data models have certain conventions for displaying schemas as diagrams. A displayed schema is called a schema diagram.\r\nThe data in the database at a particular moment in time is called a database state or snapshot. It is also called the current set of occurrences or instances in the database. \r\nMany database states can be constructed to correspond to a particular database schema. Every time we insert or delete a record or change the value of a data item in a record, we change one state of the database into another state.\r\nAt any point in time, the database has a current state.\r\nThe DBMS stores the descriptions of the schema constructs and constraintsâ€”also called the meta-dataâ€”in the DBMS catalog so that DBMS software can refer to the schema whenever it needs to. The schema is sometimes called the intension, and a database state is called an extension of the schema.'),
(1003, 'Database System Architecture', 'dbms', 'Centralized and Clientâ€“Server Architectures\r\n\r\nCentralized database systems are those that run on a single computer system and do not interact with other computer systems. Such database systems span a range from single-user database systems running on personal computers to high-performance database systems running on high-end server systems. Client â€“server systems, on the other hand, have functionality split between a server system and multiple client systems.\r\n\r\nServer System Architectures\r\n\r\nServer systems can be broadly categorized as transaction servers and data servers.\r\nTransaction-server systems, also called query-server systems, provide an interface to which clients can send requests to perform an action, in response to which they execute the action and send back results to the client.\r\nData-server systems allow clients to interact with the servers by making requests to read or update data, in units such as files or pages.\r\n\r\nParallel Database Architectures\r\n\r\nThere are several architectural models for parallel machines.\r\nShared memory. All the processors share a common memory.\r\nShared disk. All the processors share a common set of disks. Shared-disk systems are sometimes called clusters.\r\nShared nothing. The processors share neither a common memory nor common disk.\r\nHierarchical. This model is a hybrid of the preceding three architectures.\r\n\r\nThree-Schema Architecture\r\n\r\nThree of the four important characteristics of the database approach, listed in above, are \r\n\r\n(1) use of a catalog to store the database description (schema) so as to make it self-describing, \r\n\r\n(2) insulation of programs and data (program-data and program-operation independence), and \r\n\r\n(3) support of multiple user views.\r\n\r\nThe three-schema architecture was proposed to help achieve and visualize these characteristics.\r\n\r\nThe goal of the three-schema architecture is to separate the user applications from the physical database. In this architecture, schemas can be defined at the following three levels:\r\n\r\n1.	The internal level has an internal schema, which describes the physical storage structure of the database. The internal schema uses a physical data model and describes the complete details of data storage and access paths for the database.\r\n\r\n2.	The conceptual level has a conceptual schema, which describes the structure of the whole database for a community of users. The conceptual schema hides the details of physical storage structures and concentrates on describing entities, data types, relationships, user operations, and constraints. Usually, a representational data model is used to describe the conceptual schema when a database system is implemented. In this implementation conceptual schema is often based on a conceptual schema design in a high-level data model.\r\n\r\n3.	The external or view level includes a number of external schemas or user views. Each external schema describes the part of the database that a particular user group is interested in and hides the rest of the database from that user group. As in the previous level, each external schema is typically implemented using a representational data model, possibly based on an external schema design in a high-level conceptual data model.\r\n\r\nThe processes of transforming requests and results between levels are called mappings.\r\n\r\nThese mappings may be time-consuming, so some DBMSsâ€”especially those that are meant to support small databasesâ€”do not support external views. Even in such systems, however, it is necessary to transform requests between the conceptual and internal levels.'),
(1004, 'Data Independence', 'dbms, languages', 'The three-schema architecture can be used to further explain the concept of data independence, which can be defined as the capacity to change the schema at one level of a database system without having to change the schema at the next higher level. We can define two types of data independence:\r\n\r\n1.	Logical data independence is the capacity to change the conceptual schema without having to change external schemas or application programs. We may change the conceptual schema to expand the database (by adding a record type or data item), to change constraints, or to reduce the database (by removing a record type or data item). In the last case, external schemas that refer only to the remaining data should not be affected.\r\nOnly the view definition and the mappings need to be changed in a DBMS that supports logical data independence. After the conceptual schema undergoes a logical reorganization, application programs that reference the external schema constructs must work as before. Changes to constraints can be applied to the conceptual schema without affecting the external schemas or application programs.\r\n\r\n2.	Physical data independence is the capacity to change the internal schema without having to change the conceptual schema. Hence, the external schemas need not be changed as well.\r\nGenerally, physical data independence exists in most databases and file environments where physical details, such as the exact location of data on disk, and hardware details of storage encoding, placement, compression, splitting, merging of records, and so on are hidden from the user. Applications remain unaware of these details. On the other hand, logical data independence is harder to achieve because it allows structural and constraint changes without affecting application programsâ€”a much stricter requirement.\r\n\r\n*******************************    More Points    *************************************\r\n\r\n1.	DDL: data definition language is used by the DBA and by database designers to define both schemas. The DDL is used to specify the conceptual schema only.\r\n\r\n2.	SDL: storage definition language is used to specify the internal schema. The mappings between the two schemas may be specified in either one of these languages.\r\n\r\n3.	VDL: view definition language is used to specify user views and their mappings to the conceptual schema, but in most DBMSs the DDL is used to define both conceptual and external schemas.\r\n\r\n4.	DML: data manipulation language is used for data manipulation, such manipulations include retrieval, insertion, deletion, and modification of the data. There are two main types of DMLs. \r\nA high-level or nonprocedural DML can be used on its own to specify complex database operations concisely. \r\nA lowlevel or procedural DML must be embedded in a general-purpose programming language. This type of DML typically retrieves individual records or objects from the database and processes each separately.'),
(1005, 'rename()', 'php', 'rename() function is used to rename a file stored in any directory that we have access.\r\nfor example i am trying to rename an image file after it is uploaded to tmp directory of server and moved to any save dir. like $dir (as in example):\r\n// rename the uploaded picture file\r\n    $random = rand(1,9999999999);\r\n    $dir = &quot;uploads\\\\&quot;;\r\n    rename(&quot;$savedir&quot;,&quot;$dir$random.jpg&quot;);\r\n    $filename = &quot;$random.jpg&quot;;          \r\nthe final image will have name as a random number + .jpg as extension and will be in the directory specified by variable $dir.'),
(1006, 'random()', 'php', 'random() function creates a random number from the range given to it.\r\nfor example,\r\n$random_num = rand(1,99);\r\noutput of this function will be saved in $random_num and will be between 1 - 99.'),
(1007, 'Entity Set', 'dbms', 'The collection of all entities of a particular entity type in the database at any point in time is called an entity set or entity collection; the entity set is usually referred to using the same name as the entity type, even though they are two separate concepts.\r\nAn entity type describes the schema or intension for a set of entities that share the same structure. The collection of entities of a particular entity type is grouped into an entity set, which is also called the extension of the entity type.\r\nEntity types that do not have key attributes of their own are called weak entity types.'),
(1008, 'Entity Types', 'dbms', 'The ER model describes data as entities, relationships, and attributes.\r\nAn entity type defines a collection (or set) of entities that have the same attributes. Each entity type in the database is described by its name and attributes. \r\nA database usually contains groups of entities that are similar. For example, a company employing hundreds of employees may want to store similar information concerning each of the employees. These employee entities share the same attributes, but each entity has its own value(s) for each attribute.'),
(1009, 'Entities and Attributes', 'dbms', 'Entities and Their Attributes. The basic concept that the ER model represents is an entity, which is a thing or object in the real world with an independent existence. An entity may be an object with a physical existence (for example, a particular person, car, house, or employee) or it may be an object with a conceptual existence (for instance, a company, a job, or a university course). Each entity has attributesâ€”the particular properties that describe it. For example, an EMPLOYEE entity may be described by the employeeâ€™s name, age, address, salary, and job. A particular entity will have a value for each of its attributes. The attribute values that describe each entity become a major part of the data stored in the database.\r\nSeveral types of attributes occur in the ER model: simple versus composite, singlevalued versus multivalued, and stored versus derived.\r\nïƒ¼	Composite attributes can be divided into smaller subparts, which represent more basic attributes with independent meanings.\r\nïƒ¼	Attributes that are not divisible are called simple or atomic attributes.\r\nïƒ¼	Most attributes have a single value for a particular entity; such attributes are called single-valued.\r\nïƒ¼	One person may not have any college degrees, another person may have one, and a third person may have two or more degrees; therefore, different people can have different numbers of values for the College_degrees attribute. Such attributes are called multivalued.\r\nïƒ¼	In some cases, two (or more) attribute values are relatedâ€”for example, the Age and Birth_date attributes of a person. For a particular person entity, the value of Age can be determined from the current (todayâ€™s) date and the value of that personâ€™s Birth_date. The Age attribute is hence called a derived attribute and is said to be derivable from the Birth_date attribute, which is called a stored attribute.'),
(1010, 'NULL Values', 'dbms', 'In some cases, a particular entity may not have an applicable value for an attribute. For example, the Apartment_number attribute of an address applies only to addresses that are in apartment buildings and not to other types of residences, such as single-family homes. Similarly, a College_degrees attribute applies only to people with college degrees. For such situations, a special value called NULL is created.\r\nThe meaning of the former type of NULL is not applicable, whereas the meaning of the latter is unknown. The unknown category of NULL can be further classified into two cases. The first case arises when it is known that the attribute value exists but is missingâ€”for instance, if the Height attribute of a person is listed as NULL. The second case arises when it is not known whether the attribute value existsâ€”for example, if the Home_phone attribute of a person is NULL.');
INSERT INTO `y2019` (`UID`, `NAME`, `RELATED`, `DESCRIPTION`) VALUES
(1011, 'Attributes', 'dbms', 'Complex Attributes. Notice that, in general, composite and multivalued attributes can be nested arbitrarily. We can represent arbitrary nesting by grouping components of a composite attribute between parentheses ( ) and separating the components with commas, and by displaying multivalued attributes between braces { }. Such attributes are called complex attributes.\r\nKey Attributes of an Entity Type\r\nAn important constraint on the entities of an entity type is the key or uniqueness constraint on attributes. An entity type usually has one or more attributes whose values are distinct for each individual entity in the entity set. Such an attribute is called a key attribute, and its values can be used to identify each entity uniquely.\r\nValue Sets (Domains) of Attributes\r\nEach simple attribute of an entity type is associated with a value set (or domain of values), which specifies the set of values that may be assigned to that attribute for each individual entity.'),
(1012, 'Relationships', 'dbms', 'A relationship is an association between entities. The entities that participate in a relationship are also known as participants, and each relationship is identified by a name that describes the relationship.\r\nIn the relational model the term relation is used to refer to a table, while the term tuple is used to refer to a row. Similarly, the term attribute refers to a column of a table.\r\nRelationships are classified as one-to-one (1:1), one-to-many (1:M), and many-to-many (M:N or M:M).\r\nOne-to-one. An entity in A is associated with at most one entity in B, and an entity in B is associated with at most one entity in A. The 1:1 relationship should be rare in any relational database design.\r\nOne-to-many. An entity in A is associated with any number (zero or more) of entities in B. An entity in B, however, can be associated with at most one entity in A. The 1:M relationship is the relational modeling ideal. Therefore, this relationship type should be the norm in any relational database design.\r\nMany-to-many. An entity in A is associated with any number (zero or more) of entities in B, and an entity in B is associated with any number (zero or more) of entities in A. M:N relationships cannot be implemented as such in the relational model.\r\nRelationship Degree\r\nA relationship degree indicates the number of entities or participants associated with a relationship. A unary relationship exists when an association is maintained within a single entity. A binary relationship exists when two entities are associated. A ternary relationship exists when three entities are associated. Although higher degrees exist, they are rare and are not specifically named.\r\nRecursive Relationships\r\nA recursive relationship is one in which a relationship can exist between occurrences of the same entity set.'),
(1013, 'Constraints', 'dbms', 'An E-R enterprise schema may define certain constraints to which the contents of a database must confirm.\r\nMapping cardinalities, or cardinality ratios, express the number of entities to which another entity can be associated via a relationship set. Mapping cardinalities are most useful in describing binary relationship sets, although they can contribute to the description of relationship sets that involve more than two entity sets. \r\nOne-to-one. An entity in A is associated with at most one entity in B, and an entity in B is associated with at most one entity in A\r\nOne-to-many. An entity in A is associated with any number (zero or more) of entities in B. An entity in B, however, can be associated with at most one entity in A.\r\nMany-to-one. An entity in A is associated with at most one entity in B. An entity in B, however, can be associated with any number (zero or more) of entities in A.\r\nMany-to-many. An entity in A is associated with any number (zero or more) of entities in B, and an entity in B is associated with any number (zero or more) of entities in A.\r\nParticipation Constraints\r\nThe participation of an entity set E in a relationship set R is said to be total if every entity in E participates in at least one relationship in R. If only some entities in E participate in relationships in R, the participation of entity set E in relationship R is said to be partial.');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `y2019`
--
ALTER TABLE `y2019`
  ADD PRIMARY KEY (`UID`),
  ADD UNIQUE KEY `NAME` (`NAME`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `y2019`
--
ALTER TABLE `y2019`
  MODIFY `UID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=1014;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
